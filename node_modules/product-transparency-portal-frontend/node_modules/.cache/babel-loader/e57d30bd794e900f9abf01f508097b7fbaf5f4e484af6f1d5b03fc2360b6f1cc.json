{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dheeraj\\\\Desktop\\\\Altibbe_assignemnt\\\\frontend\\\\src\\\\components\\\\auth\\\\ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * Protected Route Component\n * Restricts access to authenticated users\n * Optionally restricts access to admin users\n */\nconst ProtectedRoute = ({\n  requireAdmin = false\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    isAdmin,\n    isLoading\n  } = useAuth();\n  const location = useLocation();\n\n  // Show loading state\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if user is authenticated\n  if (!isAuthenticated) {\n    // Redirect to login page with return URL\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if admin access is required\n  if (requireAdmin && !isAdmin) {\n    // Redirect to unauthorized page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/unauthorized\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the protected content\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n_s(ProtectedRoute, \"XRxLOjGf7oCUi4ZujO87zsgKd/k=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","useLocation","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","requireAdmin","_s","isAuthenticated","isAdmin","isLoading","location","children","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","_c","$RefreshReg$"],"sources":["C:/Users/Dheeraj/Desktop/Altibbe_assignemnt/frontend/src/components/auth/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\n\ninterface ProtectedRouteProps {\n  requireAdmin?: boolean;\n}\n\n/**\n * Protected Route Component\n * Restricts access to authenticated users\n * Optionally restricts access to admin users\n */\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ requireAdmin = false }) => {\n  const { isAuthenticated, isAdmin, isLoading } = useAuth();\n  const location = useLocation();\n\n  // Show loading state\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  // Check if user is authenticated\n  if (!isAuthenticated) {\n    // Redirect to login page with return URL\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // Check if admin access is required\n  if (requireAdmin && !isAdmin) {\n    // Redirect to unauthorized page\n    return <Navigate to=\"/unauthorized\" replace />;\n  }\n\n  // Render the protected content\n  return <Outlet />;\n};\n\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,OAAO,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMrD;AACA;AACA;AACA;AACA;AACA,MAAMC,cAA6C,GAAGA,CAAC;EAAEC,YAAY,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EAClF,MAAM;IAAEC,eAAe;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAGR,OAAO,CAAC,CAAC;EACzD,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAIS,SAAS,EAAE;IACb,oBAAON,OAAA;MAAAQ,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;;EAEA;EACA,IAAI,CAACR,eAAe,EAAE;IACpB;IACA,oBAAOJ,OAAA,CAACL,QAAQ;MAACkB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAER;MAAS,CAAE;MAACS,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,IAAIV,YAAY,IAAI,CAACG,OAAO,EAAE;IAC5B;IACA,oBAAOL,OAAA,CAACL,QAAQ;MAACkB,EAAE,EAAC,eAAe;MAACG,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChD;;EAEA;EACA,oBAAOZ,OAAA,CAACJ,MAAM;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACT,EAAA,CAvBIF,cAA6C;EAAA,QACDH,OAAO,EACtCD,WAAW;AAAA;AAAAoB,EAAA,GAFxBhB,cAA6C;AAyBnD,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}