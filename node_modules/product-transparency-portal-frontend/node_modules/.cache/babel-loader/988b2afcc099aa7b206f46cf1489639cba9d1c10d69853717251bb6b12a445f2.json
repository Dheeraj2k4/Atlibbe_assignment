{"ast":null,"code":"// src/services/api.ts\nimport axios from'axios';// Create axios instance with base URL\nconst api=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:5000',headers:{'Content-Type':'application/json'}});const aiService=axios.create({baseURL:process.env.REACT_APP_AI_SERVICE_URL||'http://localhost:8000',headers:{'Content-Type':'application/json'}});api.interceptors.request.use(async config=>{const token=localStorage.getItem('auth_token');if(token){config.headers['Authorization']=`Bearer ${token}`;}return config;},error=>Promise.reject(error));api.interceptors.response.use(response=>response,async error=>{var _error$response;const originalRequest=error.config;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401&&!originalRequest._retry){originalRequest._retry=true;return api(originalRequest);}return Promise.reject(error);});export const productApi={createProduct:async product=>{try{const response=await api.post('/api/products',product);return response.data;}catch(error){var _error$response2,_error$response2$data;return{success:false,error:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Failed to create product'};}},getProduct:async id=>{try{const response=await api.get(`/api/products/${id}`);return response.data;}catch(error){var _error$response3,_error$response3$data;return{success:false,error:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||'Failed to fetch product'};}}};export const reportApi={getReport:async id=>{try{const response=await api.get(`/api/report/${id}`);return response.data;}catch(error){var _error$response4,_error$response4$data;return{success:false,error:((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||'Failed to fetch report'};}},downloadReport:async id=>{try{const response=await api.get(`/api/report/${id}/download`,{responseType:'blob'});return response.data;}catch(error){var _error$response5,_error$response5$data;throw new Error(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.error)||'Failed to download report');}}};export const aiApi={generateQuestions:async request=>{try{const response=await aiService.post('/api/generate-questions',request);return{success:true,data:response.data};}catch(error){var _error$response6,_error$response6$data;console.error('Error generating questions:',error);return{success:false,error:((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.error)||'Failed to generate questions'};}},getTransparencyScore:async request=>{try{const response=await aiService.post('/api/transparency-score',request);return response.data;}catch(error){var _error$response7,_error$response7$data;return{success:false,error:((_error$response7=error.response)===null||_error$response7===void 0?void 0:(_error$response7$data=_error$response7.data)===null||_error$response7$data===void 0?void 0:_error$response7$data.error)||'Failed to calculate transparency score'};}}};export default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","aiService","REACT_APP_AI_SERVICE_URL","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","_error$response","originalRequest","status","_retry","productApi","createProduct","product","post","data","_error$response2","_error$response2$data","success","getProduct","id","get","_error$response3","_error$response3$data","reportApi","getReport","_error$response4","_error$response4$data","downloadReport","responseType","_error$response5","_error$response5$data","Error","aiApi","generateQuestions","_error$response6","_error$response6$data","console","getTransparencyScore","_error$response7","_error$response7$data"],"sources":["C:/Users/Dheeraj/Desktop/Altibbe_assignemnt/frontend/src/services/api.ts"],"sourcesContent":["// src/services/api.ts\nimport axios, { AxiosResponse } from 'axios';\nimport {\n  Product,\n  Report,\n  ApiResponse,\n  GenerateQuestionsResponse,\n  TransparencyScoreRequest,\n  TransparencyScoreResponse,\n  GenerateQuestionsRequest,\n} from '../types';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nconst aiService = axios.create({\n  baseURL: process.env.REACT_APP_AI_SERVICE_URL || 'http://localhost:8000',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\napi.interceptors.request.use(\n  async (config) => {\n    const token = localStorage.getItem('auth_token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      return api(originalRequest);\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const productApi = {\n  createProduct: async (product: Product): Promise<ApiResponse<Product>> => {\n    try {\n      const response: AxiosResponse<ApiResponse<Product>> = await api.post('/api/products', product);\n      return response.data;\n    } catch (error: any) {\n      return {\n        success: false,\n        error: error.response?.data?.error || 'Failed to create product',\n      };\n    }\n  },\n\n  getProduct: async (id: string): Promise<ApiResponse<Product>> => {\n    try {\n      const response: AxiosResponse<ApiResponse<Product>> = await api.get(`/api/products/${id}`);\n      return response.data;\n    } catch (error: any) {\n      return {\n        success: false,\n        error: error.response?.data?.error || 'Failed to fetch product',\n      };\n    }\n  },\n};\n\nexport const reportApi = {\n  getReport: async (id: string): Promise<ApiResponse<Report>> => {\n    try {\n      const response: AxiosResponse<ApiResponse<Report>> = await api.get(`/api/report/${id}`);\n      return response.data;\n    } catch (error: any) {\n      return {\n        success: false,\n        error: error.response?.data?.error || 'Failed to fetch report',\n      };\n    }\n  },\n\n  downloadReport: async (id: string): Promise<Blob> => {\n    try {\n      const response = await api.get(`/api/report/${id}/download`, {\n        responseType: 'blob',\n      });\n      return response.data;\n    } catch (error: any) {\n      throw new Error(error.response?.data?.error || 'Failed to download report');\n    }\n  },\n};\n\nexport const aiApi = {\n  generateQuestions: async (\n    request: GenerateQuestionsRequest\n  ): Promise<ApiResponse<GenerateQuestionsResponse>> => {\n    try {\n      const response: AxiosResponse<GenerateQuestionsResponse> = await aiService.post(\n        '/api/generate-questions',\n        request\n      );\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error: any) {\n      console.error('Error generating questions:', error);\n      return {\n        success: false,\n        error: error.response?.data?.error || 'Failed to generate questions'\n      };\n    }\n  },\n  \n\n  getTransparencyScore: async (\n    request: TransparencyScoreRequest\n  ): Promise<ApiResponse<TransparencyScoreResponse>> => {\n    try {\n      const response: AxiosResponse<ApiResponse<TransparencyScoreResponse>> = await aiService.post(\n        '/api/transparency-score',\n        request\n      );\n      return response.data;\n    } catch (error: any) {\n      return {\n        success: false,\n        error: error.response?.data?.error || 'Failed to calculate transparency score',\n      };\n    }\n  },\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}