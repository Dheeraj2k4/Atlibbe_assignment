{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dheeraj\\\\Desktop\\\\Altibbe_assignemnt\\\\frontend\\\\src\\\\pages\\\\ProductForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormField from '../components/FormField';\nimport Button from '../components/Button';\nimport { productApi, aiApi } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  background-color: white;\n  border-radius: ${({\n  theme\n}) => theme.borderRadius.default};\n  box-shadow: ${({\n  theme\n}) => theme.shadows.medium};\n`;\n_c = FormContainer;\nconst FormHeader = styled.div`\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n_c2 = FormHeader;\nconst FormTitle = styled.h1`\n  font-size: 2rem;\n  color: ${({\n  theme\n}) => theme.colors.primary};\n  margin-bottom: 1rem;\n`;\n_c3 = FormTitle;\nconst FormDescription = styled.p`\n  color: ${({\n  theme\n}) => theme.colors.lightText};\n  font-size: 1.125rem;\n`;\n_c4 = FormDescription;\nconst FormActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n`;\n_c5 = FormActions;\nconst LoadingOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  color: white;\n`;\n_c6 = LoadingOverlay;\nconst Spinner = styled.div`\n  border: 4px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top: 4px solid white;\n  width: 40px;\n  height: 40px;\n  margin-bottom: 1rem;\n  animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n_c7 = Spinner;\nconst basicFields = [{\n  id: 'name',\n  question_text: 'Product Name',\n  question_type: 'text',\n  required: true\n}, {\n  id: 'description',\n  question_text: 'Product Description',\n  question_type: 'text',\n  required: true,\n  tooltip: 'Provide a detailed description of your product.'\n}, {\n  id: 'category',\n  question_text: 'Product Category',\n  question_type: 'select',\n  required: true,\n  options: [{\n    value: 'supplements',\n    label: 'Supplements'\n  }, {\n    value: 'food',\n    label: 'Food & Beverage'\n  }, {\n    value: 'cosmetics',\n    label: 'Cosmetics'\n  }, {\n    value: 'personal_care',\n    label: 'Personal Care'\n  }, {\n    value: 'household',\n    label: 'Household Products'\n  }, {\n    value: 'other',\n    label: 'Other'\n  }]\n}];\nconst initialBasicValues = {\n  name: '',\n  description: '',\n  category: ''\n};\nconst basicValidation = Yup.object({\n  name: Yup.string().required('Product name is required'),\n  description: Yup.string().required('Product description is required'),\n  category: Yup.string().required('Product category is required')\n});\nconst ProductForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const [step, setStep] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState('');\n  const [basicInfo, setBasicInfo] = useState(null);\n  const [dynamicQuestions, setDynamicQuestions] = useState([]);\n  const handleBasicSubmit = async (values, {\n    setSubmitting\n  }) => {\n    setIsLoading(true);\n    setLoadingMessage('Generating follow-up questions...');\n    try {\n      var _response$data, _response$data$questi;\n      const response = await aiApi.generateQuestions({\n        product: {\n          name: values.name,\n          description: values.description,\n          category: values.category\n        }\n      });\n      if (response.success && ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$questi = _response$data.questions) === null || _response$data$questi === void 0 ? void 0 : _response$data$questi.length) > 0) {\n        const mappedQuestions = response.data.questions.map((text, index) => ({\n          id: `q_${index}`,\n          question_text: text,\n          question_type: 'text',\n          required: true\n        }));\n        setBasicInfo(values);\n        setDynamicQuestions(mappedQuestions);\n        setStep(2);\n      } else {\n        alert('Failed to generate follow-up questions.');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('An error occurred while generating questions.');\n    } finally {\n      setIsLoading(false);\n      setSubmitting(false);\n    }\n  };\n  const handleDynamicSubmit = async (values, {\n    setSubmitting\n  }) => {\n    setIsLoading(true);\n    setLoadingMessage('Submitting your product information...');\n    try {\n      const product = {\n        name: (basicInfo === null || basicInfo === void 0 ? void 0 : basicInfo.name) || '',\n        description: (basicInfo === null || basicInfo === void 0 ? void 0 : basicInfo.description) || '',\n        category: (basicInfo === null || basicInfo === void 0 ? void 0 : basicInfo.category) || '',\n        ingredients: [],\n        manufacturing_location: '',\n        certifications: [],\n        additional_info: {}\n      };\n      dynamicQuestions.forEach(q => {\n        const key = q.id || q.question_text;\n        if (!product.additional_info) product.additional_info = {};\n        product.additional_info[key] = values[key];\n      });\n      const response = await productApi.createProduct(product);\n      if (response.success && response.data) {\n        navigate(`/report/${response.data.id}`);\n      } else {\n        alert(response.error || 'Failed to submit product.');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('An unexpected error occurred.');\n    } finally {\n      setIsLoading(false);\n      setSubmitting(false);\n    }\n  };\n  const dynamicValidation = useMemo(() => {\n    const shape = {};\n    dynamicQuestions.forEach(q => {\n      shape[q.id || q.question_text] = q.required ? Yup.string().required('Required') : Yup.string();\n    });\n    return Yup.object(shape);\n  }, [dynamicQuestions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormHeader, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Product Submission Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormDescription, {\n          children: \"Complete the form to generate a transparency report.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), step === 1 && /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialBasicValues,\n        validationSchema: basicValidation,\n        onSubmit: handleBasicSubmit,\n        validateOnChange: false,\n        validateOnBlur: true,\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [basicFields.map(field => /*#__PURE__*/_jsxDEV(FormField, {\n            label: field.question_text,\n            name: field.id || field.question_text,\n            type: field.question_type === 'select' ? 'select' : 'text',\n            options: Array.isArray(field.options) ? field.options.map(opt => typeof opt === 'string' ? {\n              value: opt,\n              label: opt\n            } : opt) : undefined,\n            tooltip: field.tooltip,\n            required: field.required\n          }, field.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(FormActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: isSubmitting,\n              isLoading: isSubmitting,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), step === 2 && /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: dynamicQuestions.reduce((acc, q) => {\n          acc[q.id || q.question_text] = '';\n          return acc;\n        }, {}),\n        validationSchema: dynamicValidation,\n        onSubmit: handleDynamicSubmit,\n        validateOnChange: false,\n        validateOnBlur: true,\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [dynamicQuestions.map(field => /*#__PURE__*/_jsxDEV(FormField, {\n            label: field.question_text,\n            name: field.id || field.question_text,\n            type: field.question_type === 'select' ? 'select' : 'text',\n            options: Array.isArray(field.options) ? field.options.map(opt => typeof opt === 'string' ? {\n              value: opt,\n              label: opt\n            } : opt) : undefined,\n            tooltip: field.tooltip,\n            required: field.required\n          }, field.id || field.question_text, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(FormActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: isSubmitting,\n              isLoading: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: loadingMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductForm, \"YjQtuZCqs44wnPZtsRC6X9gXr54=\", false, function () {\n  return [useNavigate];\n});\n_c8 = ProductForm;\nexport default ProductForm;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"FormContainer\");\n$RefreshReg$(_c2, \"FormHeader\");\n$RefreshReg$(_c3, \"FormTitle\");\n$RefreshReg$(_c4, \"FormDescription\");\n$RefreshReg$(_c5, \"FormActions\");\n$RefreshReg$(_c6, \"LoadingOverlay\");\n$RefreshReg$(_c7, \"Spinner\");\n$RefreshReg$(_c8, \"ProductForm\");","map":{"version":3,"names":["React","useState","useMemo","useNavigate","styled","Formik","Form","Yup","FormField","Button","productApi","aiApi","jsxDEV","_jsxDEV","FormContainer","div","theme","borderRadius","default","shadows","medium","_c","FormHeader","_c2","FormTitle","h1","colors","primary","_c3","FormDescription","p","lightText","_c4","FormActions","_c5","LoadingOverlay","_c6","Spinner","_c7","basicFields","id","question_text","question_type","required","tooltip","options","value","label","initialBasicValues","name","description","category","basicValidation","object","string","ProductForm","_s","navigate","step","setStep","isLoading","setIsLoading","loadingMessage","setLoadingMessage","basicInfo","setBasicInfo","dynamicQuestions","setDynamicQuestions","handleBasicSubmit","values","setSubmitting","_response$data","_response$data$questi","response","generateQuestions","product","success","data","questions","length","mappedQuestions","map","text","index","alert","error","console","handleDynamicSubmit","ingredients","manufacturing_location","certifications","additional_info","forEach","q","key","createProduct","dynamicValidation","shape","className","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","validationSchema","onSubmit","validateOnChange","validateOnBlur","isSubmitting","field","type","Array","isArray","opt","undefined","disabled","reduce","acc","_c8","$RefreshReg$"],"sources":["C:/Users/Dheeraj/Desktop/Altibbe_assignemnt/frontend/src/pages/ProductForm.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport * as Yup from 'yup';\nimport FormField from '../components/FormField';\nimport Button from '../components/Button';\nimport { productApi, aiApi } from '../services/api';\nimport { FormStep, FormValues, Product, Question } from '../types';\n\nconst FormContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  background-color: white;\n  border-radius: ${({ theme }) => theme.borderRadius.default};\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n`;\n\nconst FormHeader = styled.div`\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n\nconst FormTitle = styled.h1`\n  font-size: 2rem;\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 1rem;\n`;\n\nconst FormDescription = styled.p`\n  color: ${({ theme }) => theme.colors.lightText};\n  font-size: 1.125rem;\n`;\n\nconst FormActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n`;\n\nconst LoadingOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  color: white;\n`;\n\nconst Spinner = styled.div`\n  border: 4px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top: 4px solid white;\n  width: 40px;\n  height: 40px;\n  margin-bottom: 1rem;\n  animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst basicFields: Question[] = [\n  {\n    id: 'name',\n    question_text: 'Product Name',\n    question_type: 'text',\n    required: true,\n  },\n  {\n    id: 'description',\n    question_text: 'Product Description',\n    question_type: 'text',\n    required: true,\n    tooltip: 'Provide a detailed description of your product.',\n  },\n  {\n    id: 'category',\n    question_text: 'Product Category',\n    question_type: 'select',\n    required: true,\n    options: [\n      { value: 'supplements', label: 'Supplements' },\n      { value: 'food', label: 'Food & Beverage' },\n      { value: 'cosmetics', label: 'Cosmetics' },\n      { value: 'personal_care', label: 'Personal Care' },\n      { value: 'household', label: 'Household Products' },\n      { value: 'other', label: 'Other' },\n    ],\n  },\n];\n\nconst initialBasicValues: FormValues = {\n  name: '',\n  description: '',\n  category: '',\n};\n\nconst basicValidation = Yup.object({\n  name: Yup.string().required('Product name is required'),\n  description: Yup.string().required('Product description is required'),\n  category: Yup.string().required('Product category is required'),\n});\n\nconst ProductForm: React.FC = () => {\n  const navigate = useNavigate();\n  const [step, setStep] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState('');\n  const [basicInfo, setBasicInfo] = useState<FormValues | null>(null);\n  const [dynamicQuestions, setDynamicQuestions] = useState<Question[]>([]);\n\n  const handleBasicSubmit = async (\n    values: FormValues,\n    { setSubmitting }: FormikHelpers<FormValues>\n  ) => {\n    setIsLoading(true);\n    setLoadingMessage('Generating follow-up questions...');\n\n    try {\n      const response = await aiApi.generateQuestions({\n        product: {\n          name: values.name,\n          description: values.description,\n          category: values.category,\n        },\n      });\n\n      if (response.success && response.data?.questions?.length > 0) {\n        const mappedQuestions: Question[] = response.data.questions.map((text, index) => ({\n          id: `q_${index}`,\n          question_text: text,\n          question_type: 'text',\n          required: true,\n        }));\n        setBasicInfo(values);\n        setDynamicQuestions(mappedQuestions);\n        setStep(2);\n      } else {\n        alert('Failed to generate follow-up questions.');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('An error occurred while generating questions.');\n    } finally {\n      setIsLoading(false);\n      setSubmitting(false);\n    }\n  };\n\n  const handleDynamicSubmit = async (\n    values: FormValues,\n    { setSubmitting }: FormikHelpers<FormValues>\n  ) => {\n    setIsLoading(true);\n    setLoadingMessage('Submitting your product information...');\n\n    try {\n      const product: Product = {\n        name: basicInfo?.name || '',\n        description: basicInfo?.description || '',\n        category: basicInfo?.category || '',\n        ingredients: [],\n        manufacturing_location: '',\n        certifications: [],\n        additional_info: {},\n      };\n\n      dynamicQuestions.forEach((q) => {\n        const key = q.id || q.question_text;\n        if (!product.additional_info) product.additional_info = {};\n        product.additional_info[key] = values[key];\n      });\n\n      const response = await productApi.createProduct(product);\n      if (response.success && response.data) {\n        navigate(`/report/${response.data.id}`);\n      } else {\n        alert(response.error || 'Failed to submit product.');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('An unexpected error occurred.');\n    } finally {\n      setIsLoading(false);\n      setSubmitting(false);\n    }\n  };\n\n  const dynamicValidation = useMemo(() => {\n    const shape: Record<string, any> = {};\n    dynamicQuestions.forEach((q) => {\n      shape[q.id || q.question_text] = q.required ? Yup.string().required('Required') : Yup.string();\n    });\n    return Yup.object(shape);\n  }, [dynamicQuestions]);\n\n  return (\n    <div className=\"container\">\n      <FormContainer>\n        <FormHeader>\n          <FormTitle>Product Submission Form</FormTitle>\n          <FormDescription>Complete the form to generate a transparency report.</FormDescription>\n        </FormHeader>\n\n        {step === 1 && (\n          <Formik\n            initialValues={initialBasicValues}\n            validationSchema={basicValidation}\n            onSubmit={handleBasicSubmit}\n            validateOnChange={false}\n            validateOnBlur={true}\n          >\n            {({ isSubmitting }) => (\n              <Form>\n                {basicFields.map((field) => (\n                  <FormField\n                    key={field.id}\n                    label={field.question_text}\n                    name={field.id || field.question_text}\n                    type={field.question_type === 'select' ? 'select' : 'text'}\n                    options={Array.isArray(field.options)\n                      ? field.options.map(opt => typeof opt === 'string' ? { value: opt, label: opt } : opt)\n                      : undefined}\n                    tooltip={field.tooltip}\n                    required={field.required}\n                  />\n                ))}\n                <FormActions>\n                  <Button type=\"submit\" disabled={isSubmitting} isLoading={isSubmitting}>Next</Button>\n                </FormActions>\n              </Form>\n            )}\n          </Formik>\n        )}\n\n        {step === 2 && (\n          <Formik\n            initialValues={dynamicQuestions.reduce((acc, q) => {\n              acc[q.id || q.question_text] = '';\n              return acc;\n            }, {} as FormValues)}\n            validationSchema={dynamicValidation}\n            onSubmit={handleDynamicSubmit}\n            validateOnChange={false}\n            validateOnBlur={true}\n          >\n            {({ isSubmitting }) => (\n              <Form>\n                {dynamicQuestions.map((field) => (\n                  <FormField\n                    key={field.id || field.question_text}\n                    label={field.question_text}\n                    name={field.id || field.question_text}\n                    type={field.question_type === 'select' ? 'select' : 'text'}\n                    options={Array.isArray(field.options)\n                      ? field.options.map(opt => typeof opt === 'string' ? { value: opt, label: opt } : opt)\n                      : undefined}\n                    tooltip={field.tooltip}\n                    required={field.required}\n                  />\n                ))}\n                <FormActions>\n                  <Button type=\"submit\" disabled={isSubmitting} isLoading={isSubmitting}>Submit</Button>\n                </FormActions>\n              </Form>\n            )}\n          </Formik>\n        )}\n\n        {isLoading && (\n          <LoadingOverlay>\n            <Spinner />\n            <p>{loadingMessage}</p>\n          </LoadingOverlay>\n        )}\n      </FormContainer>\n    </div>\n  );\n};\n\nexport default ProductForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}