{"ast":null,"code":"import jsPDF from'jspdf';import React,{useState,useMemo}from'react';import{useNavigate}from'react-router-dom';import styled from'styled-components';import{Formik,Form}from'formik';import*as Yup from'yup';import FormField from'../components/FormField';import Button from'../components/Button';import{productApi,aiApi}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FormContainer=styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  background-color: white;\n  border-radius: ${_ref=>{let{theme}=_ref;return theme.borderRadius.default;}};\n  box-shadow: ${_ref2=>{let{theme}=_ref2;return theme.shadows.medium;}};\n`;const FormHeader=styled.div`\n  margin-bottom: 2rem;\n  text-align: center;\n`;const FormTitle=styled.h1`\n  font-size: 2rem;\n  color: ${_ref3=>{let{theme}=_ref3;return theme.colors.primary;}};\n  margin-bottom: 1rem;\n`;const FormDescription=styled.p`\n  color: ${_ref4=>{let{theme}=_ref4;return theme.colors.lightText;}};\n  font-size: 1.125rem;\n`;const FormActions=styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n`;const LoadingOverlay=styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  color: white;\n`;const Spinner=styled.div`\n  border: 4px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top: 4px solid white;\n  width: 40px;\n  height: 40px;\n  margin-bottom: 1rem;\n  animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;const basicFields=[{id:'name',question_text:'Product Name',question_type:'text',required:true},{id:'description',question_text:'Product Description',question_type:'text',required:true,tooltip:'Provide a detailed description of your product, including its purpose and benefits.'},{id:'category',question_text:'Product Category',question_type:'select',required:true,options:[{value:'supplements',label:'Supplements'},{value:'food',label:'Food & Beverage'},{value:'cosmetics',label:'Cosmetics'},{value:'personal_care',label:'Personal Care'},{value:'household',label:'Household Products'},{value:'other',label:'Other'}]}];const initialBasicValues={name:'',description:'',category:''};const basicValidation=Yup.object({name:Yup.string().required('Product name is required'),description:Yup.string().required('Product description is required'),category:Yup.string().required('Product category is required')});const ProductForm=()=>{const navigate=useNavigate();const[isLoading,setIsLoading]=useState(false);const[loadingMessage,setLoadingMessage]=useState('');const[currentStep,setCurrentStep]=useState(1);const[productData,setProductData]=useState(null);const[aiQuestions,setAiQuestions]=useState([]);const handleBasicSubmit=async(values,_ref5)=>{let{setSubmitting}=_ref5;setIsLoading(true);setLoadingMessage('Generating AI questions...');try{const product={name:values.name,description:values.description,category:values.category,ingredients:'',manufacturing_location:'',certifications:[],additional_info:{}};setProductData(product);const generateRequest={product:product,num_questions:5};const aiResponse=await aiApi.generateQuestions(generateRequest);if(aiResponse.success&&aiResponse.data){const questions=aiResponse.data.questions.map((questionText,index)=>({id:`q_${index}`,question_text:questionText,question_type:'text',required:false,is_ai_generated:true}));setAiQuestions(questions);setCurrentStep(2);}else{alert(`Error: ${aiResponse.error||'Failed to generate questions. Please try again.'}`);}}catch(error){console.error(error);alert('An error occurred while generating questions.');}finally{setIsLoading(false);setSubmitting(false);}};const handleQuestionsSubmit=async(values,_ref6)=>{let{setSubmitting}=_ref6;if(!productData){alert('Product data is missing. Please go back and try again.');return;}setIsLoading(true);setLoadingMessage('Submitting data and generating transparency report...');try{const answeredQuestions=aiQuestions.map(q=>{var _q$required;return{question_text:q.question_text,answer:values[q.id]||'',question_type:q.question_type,is_ai_generated:true,required:(_q$required=q.required)!==null&&_q$required!==void 0?_q$required:false};});const productPayload={...productData,questions:answeredQuestions};const response=await productApi.createProduct(productPayload);if(response.success&&'data'in response){const createdProduct=response.data;const doc=new jsPDF();doc.setFontSize(16);doc.text('Product Transparency Report',20,20);doc.setFontSize(12);doc.text(`Name: ${createdProduct.name}`,20,40);doc.text(`Description: ${createdProduct.description}`,20,50);doc.text(`Category: ${createdProduct.category}`,20,60);let y=80;answeredQuestions.forEach(_ref7=>{let{question_text,answer}=_ref7;doc.text(`${question_text}: ${answer}`,20,y);y+=10;});const blobUrl=doc.output('bloburl');window.open(blobUrl,'_blank');navigate(`/product/${createdProduct._id}`);}else{alert(`Error: ${response.error||'Failed to submit product'}`);}}catch(error){console.error(error);alert('An error occurred while submitting the product.');}finally{setIsLoading(false);setSubmitting(false);}};const initialQuestionsValues=useMemo(()=>{const values={};aiQuestions.forEach(question=>{values[question.id]='';});return values;},[aiQuestions]);return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsxs(FormHeader,{children:[/*#__PURE__*/_jsx(FormTitle,{children:\"Product Submission Form\"}),/*#__PURE__*/_jsx(FormDescription,{children:currentStep===1?'Complete the form below to generate AI questions about your product.':'Please answer the following AI-generated questions about your product.'})]}),currentStep===1?/*#__PURE__*/_jsx(Formik,{initialValues:initialBasicValues,validationSchema:basicValidation,onSubmit:handleBasicSubmit,validateOnChange:false,validateOnBlur:true,children:_ref8=>{let{isSubmitting}=_ref8;return/*#__PURE__*/_jsxs(Form,{children:[basicFields.map(field=>/*#__PURE__*/_jsx(FormField,{label:field.question_text,name:field.id,type:field.question_type==='select'?'select':'text',options:Array.isArray(field.options)?field.options.map(option=>typeof option==='string'?{value:option,label:option}:option):undefined,tooltip:field.tooltip,required:field.required},field.id)),/*#__PURE__*/_jsx(FormActions,{children:/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:isSubmitting,isLoading:isSubmitting,children:\"Next\"})})]});}}):/*#__PURE__*/_jsx(Formik,{initialValues:initialQuestionsValues,onSubmit:handleQuestionsSubmit,validateOnChange:false,validateOnBlur:true,children:_ref9=>{let{isSubmitting}=_ref9;return/*#__PURE__*/_jsxs(Form,{children:[aiQuestions.map(question=>/*#__PURE__*/_jsx(FormField,{label:question.question_text,name:question.id,type:\"textarea\",required:question.required},question.id)),/*#__PURE__*/_jsxs(FormActions,{children:[/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"outline\",onClick:()=>setCurrentStep(1),disabled:isSubmitting,children:\"Back\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:isSubmitting,isLoading:isSubmitting,children:\"Submit\"})]})]});}}),isLoading&&/*#__PURE__*/_jsxs(LoadingOverlay,{children:[/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(\"p\",{children:loadingMessage})]})]})});};export default ProductForm;","map":{"version":3,"names":["jsPDF","React","useState","useMemo","useNavigate","styled","Formik","Form","Yup","FormField","Button","productApi","aiApi","jsx","_jsx","jsxs","_jsxs","FormContainer","div","_ref","theme","borderRadius","default","_ref2","shadows","medium","FormHeader","FormTitle","h1","_ref3","colors","primary","FormDescription","p","_ref4","lightText","FormActions","LoadingOverlay","Spinner","basicFields","id","question_text","question_type","required","tooltip","options","value","label","initialBasicValues","name","description","category","basicValidation","object","string","ProductForm","navigate","isLoading","setIsLoading","loadingMessage","setLoadingMessage","currentStep","setCurrentStep","productData","setProductData","aiQuestions","setAiQuestions","handleBasicSubmit","values","_ref5","setSubmitting","product","ingredients","manufacturing_location","certifications","additional_info","generateRequest","num_questions","aiResponse","generateQuestions","success","data","questions","map","questionText","index","is_ai_generated","alert","error","console","handleQuestionsSubmit","_ref6","answeredQuestions","q","_q$required","answer","productPayload","response","createProduct","createdProduct","doc","setFontSize","text","y","forEach","_ref7","blobUrl","output","window","open","_id","initialQuestionsValues","question","className","children","initialValues","validationSchema","onSubmit","validateOnChange","validateOnBlur","_ref8","isSubmitting","field","type","Array","isArray","option","undefined","disabled","_ref9","variant","onClick"],"sources":["C:/Users/Dheeraj/Desktop/Altibbe_assignemnt/frontend/src/pages/ProductForm.tsx"],"sourcesContent":["import jsPDF from 'jspdf';\nimport React, { useState, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport * as Yup from 'yup';\nimport FormField from '../components/FormField';\nimport Button from '../components/Button';\nimport { productApi, aiApi } from '../services/api';\nimport { FormValues, Product, Question, GenerateQuestionsRequest } from '../types';\n\nconst FormContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  background-color: white;\n  border-radius: ${({ theme }) => theme.borderRadius.default};\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n`;\n\nconst FormHeader = styled.div`\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n\nconst FormTitle = styled.h1`\n  font-size: 2rem;\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 1rem;\n`;\n\nconst FormDescription = styled.p`\n  color: ${({ theme }) => theme.colors.lightText};\n  font-size: 1.125rem;\n`;\n\nconst FormActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n`;\n\nconst LoadingOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  color: white;\n`;\n\nconst Spinner = styled.div`\n  border: 4px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top: 4px solid white;\n  width: 40px;\n  height: 40px;\n  margin-bottom: 1rem;\n  animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst basicFields: Question[] = [\n  {\n    id: 'name',\n    question_text: 'Product Name',\n    question_type: 'text',\n    required: true,\n  },\n  {\n    id: 'description',\n    question_text: 'Product Description',\n    question_type: 'text',\n    required: true,\n    tooltip: 'Provide a detailed description of your product, including its purpose and benefits.',\n  },\n  {\n    id: 'category',\n    question_text: 'Product Category',\n    question_type: 'select',\n    required: true,\n    options: [\n      { value: 'supplements', label: 'Supplements' },\n      { value: 'food', label: 'Food & Beverage' },\n      { value: 'cosmetics', label: 'Cosmetics' },\n      { value: 'personal_care', label: 'Personal Care' },\n      { value: 'household', label: 'Household Products' },\n      { value: 'other', label: 'Other' },\n    ],\n  },\n];\n\nconst initialBasicValues: FormValues = {\n  name: '',\n  description: '',\n  category: '',\n};\n\nconst basicValidation = Yup.object({\n  name: Yup.string().required('Product name is required'),\n  description: Yup.string().required('Product description is required'),\n  category: Yup.string().required('Product category is required'),\n});\n\nconst ProductForm: React.FC = () => {\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState('');\n  const [currentStep, setCurrentStep] = useState(1);\n  const [productData, setProductData] = useState<Product | null>(null);\n  const [aiQuestions, setAiQuestions] = useState<Question[]>([]);\n\n  const handleBasicSubmit = async (\n    values: FormValues,\n    { setSubmitting }: FormikHelpers<FormValues>\n  ) => {\n    setIsLoading(true);\n    setLoadingMessage('Generating AI questions...');\n\n    try {\n      const product: Product = {\n        name: values.name,\n        description: values.description,\n        category: values.category,\n        ingredients: '',\n        manufacturing_location: '',\n        certifications: [],\n        additional_info: {},\n      };\n\n      setProductData(product);\n\n      const generateRequest: GenerateQuestionsRequest = {\n        product: product,\n        num_questions: 5\n      };\n\n      const aiResponse = await aiApi.generateQuestions(generateRequest);\n\n      if (aiResponse.success && aiResponse.data) {\n        const questions: Question[] = aiResponse.data.questions.map((questionText, index) => ({\n          id: `q_${index}`,\n          question_text: questionText,\n          question_type: 'text',\n          required: false,\n          is_ai_generated: true\n        }));\n\n        setAiQuestions(questions);\n        setCurrentStep(2);\n      } else {\n        alert(`Error: ${aiResponse.error || 'Failed to generate questions. Please try again.'}`);\n      }\n    } catch (error) {\n      console.error(error);\n      alert('An error occurred while generating questions.');\n    } finally {\n      setIsLoading(false);\n      setSubmitting(false);\n    }\n  };\n\n  const handleQuestionsSubmit = async (\n    values: FormValues,\n    { setSubmitting }: FormikHelpers<FormValues>\n  ) => {\n    if (!productData) {\n      alert('Product data is missing. Please go back and try again.');\n      return;\n    }\n\n    setIsLoading(true);\n    setLoadingMessage('Submitting data and generating transparency report...');\n\n    try {\n      const answeredQuestions: Question[] = aiQuestions.map((q) => ({\n        question_text: q.question_text,\n        answer: values[q.id!] || '',\n        question_type: q.question_type,\n        is_ai_generated: true,\n        required: q.required ?? false,\n      }));\n\n      const productPayload = {\n        ...productData,\n        questions: answeredQuestions,\n      };\n\n      const response = await productApi.createProduct(productPayload);\n\n      if (response.success && 'data' in response) {\n        const createdProduct = response.data as Product & { _id: string };\n\n        const doc = new jsPDF();\n        doc.setFontSize(16);\n        doc.text('Product Transparency Report', 20, 20);\n\n        doc.setFontSize(12);\n        doc.text(`Name: ${createdProduct.name}`, 20, 40);\n        doc.text(`Description: ${createdProduct.description}`, 20, 50);\n        doc.text(`Category: ${createdProduct.category}`, 20, 60);\n\n        let y = 80;\n        answeredQuestions.forEach(({ question_text, answer }) => {\n          doc.text(`${question_text}: ${answer}`, 20, y);\n          y += 10;\n        });\n\n        const blobUrl = doc.output('bloburl');\n        window.open(blobUrl, '_blank');\n\n        navigate(`/product/${createdProduct._id}`);\n      } else {\n        alert(`Error: ${response.error || 'Failed to submit product'}`);\n      }\n    } catch (error) {\n      console.error(error);\n      alert('An error occurred while submitting the product.');\n    } finally {\n      setIsLoading(false);\n      setSubmitting(false);\n    }\n  };\n\n  const initialQuestionsValues = useMemo(() => {\n    const values: FormValues = {};\n    aiQuestions.forEach(question => {\n      values[question.id!] = '';\n    });\n    return values;\n  }, [aiQuestions]);\n\n  return (\n    <div className=\"container\">\n      <FormContainer>\n        <FormHeader>\n          <FormTitle>Product Submission Form</FormTitle>\n          <FormDescription>\n            {currentStep === 1 \n              ? 'Complete the form below to generate AI questions about your product.'\n              : 'Please answer the following AI-generated questions about your product.'}\n          </FormDescription>\n        </FormHeader>\n\n        {currentStep === 1 ? (\n          <Formik\n            initialValues={initialBasicValues}\n            validationSchema={basicValidation}\n            onSubmit={handleBasicSubmit}\n            validateOnChange={false}\n            validateOnBlur={true}\n          >\n            {({ isSubmitting }) => (\n              <Form>\n                {basicFields.map((field) => (\n                  <FormField\n                    key={field.id}\n                    label={field.question_text}\n                    name={field.id!}\n                    type={field.question_type === 'select' ? 'select' : 'text'}\n                    options={\n                      Array.isArray(field.options)\n                        ? field.options.map((option) =>\n                            typeof option === 'string'\n                              ? { value: option, label: option }\n                              : option\n                          )\n                        : undefined\n                    }\n                    tooltip={field.tooltip}\n                    required={field.required}\n                  />\n                ))}\n                <FormActions>\n                  <Button type=\"submit\" disabled={isSubmitting} isLoading={isSubmitting}>\n                    Next\n                  </Button>\n                </FormActions>\n              </Form>\n            )}\n          </Formik>\n        ) : (\n          <Formik\n            initialValues={initialQuestionsValues}\n            onSubmit={handleQuestionsSubmit}\n            validateOnChange={false}\n            validateOnBlur={true}\n          >\n            {({ isSubmitting }) => (\n              <Form>\n                {aiQuestions.map((question) => (\n                  <FormField\n                    key={question.id}\n                    label={question.question_text}\n                    name={question.id!}\n                    type=\"textarea\"\n                    required={question.required}\n                  />\n                ))}\n                <FormActions>\n                  <Button \n                    type=\"button\" \n                    variant=\"outline\" \n                    onClick={() => setCurrentStep(1)}\n                    disabled={isSubmitting}\n                  >\n                    Back\n                  </Button>\n                  <Button type=\"submit\" disabled={isSubmitting} isLoading={isSubmitting}>\n                    Submit\n                  </Button>\n                </FormActions>\n              </Form>\n            )}\n          </Formik>\n        )}\n\n        {isLoading && (\n          <LoadingOverlay>\n            <Spinner />\n            <p>{loadingMessage}</p>\n          </LoadingOverlay>\n        )}\n      </FormContainer>\n    </div>\n  );\n};\n\nexport default ProductForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}