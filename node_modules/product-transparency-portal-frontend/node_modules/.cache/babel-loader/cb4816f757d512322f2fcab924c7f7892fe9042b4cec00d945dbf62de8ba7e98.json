{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dheeraj\\\\Desktop\\\\Altibbe_assignemnt\\\\frontend\\\\src\\\\pages\\\\ProductForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormField from '../components/FormField';\nimport Button from '../components/Button';\nimport { productApi, aiApi } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  background-color: white;\n  border-radius: ${({\n  theme\n}) => theme.borderRadius.default};\n  box-shadow: ${({\n  theme\n}) => theme.shadows.medium};\n\n  @media (max-width: ${({\n  theme\n}) => theme.breakpoints.md}) {\n    padding: 1.5rem;\n  }\n`;\n_c = FormContainer;\nconst FormHeader = styled.div`\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n_c2 = FormHeader;\nconst FormTitle = styled.h1`\n  font-size: 2rem;\n  color: ${({\n  theme\n}) => theme.colors.primary};\n  margin-bottom: 1rem;\n\n  @media (max-width: ${({\n  theme\n}) => theme.breakpoints.md}) {\n    font-size: 1.75rem;\n  }\n`;\n_c3 = FormTitle;\nconst FormDescription = styled.p`\n  color: ${({\n  theme\n}) => theme.colors.lightText};\n  font-size: 1.125rem;\n\n  @media (max-width: ${({\n  theme\n}) => theme.breakpoints.md}) {\n    font-size: 1rem;\n  }\n`;\n_c4 = FormDescription;\nconst StepIndicator = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 2rem;\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    right: 0;\n    height: 2px;\n    background-color: ${({\n  theme\n}) => theme.colors.border};\n    transform: translateY(-50%);\n    z-index: 0;\n  }\n`;\n_c5 = StepIndicator;\nconst Step = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  z-index: 1;\n`;\n_c6 = Step;\nconst StepCircle = styled.div`\n  width: 2.5rem;\n  height: 2.5rem;\n  border-radius: 50%;\n  background-color: ${({\n  $active,\n  $completed,\n  theme\n}) => $completed ? theme.colors.success : $active ? theme.colors.primary : theme.colors.lightBg};\n  color: ${({\n  $active,\n  $completed\n}) => $active || $completed ? 'white' : '#666'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n  transition: all ${({\n  theme\n}) => theme.transitions.default};\n  border: 2px solid ${({\n  $active,\n  $completed,\n  theme\n}) => $completed ? theme.colors.success : $active ? theme.colors.primary : theme.colors.border};\n`;\n_c7 = StepCircle;\nconst StepLabel = styled.span`\n  font-size: 0.875rem;\n  color: ${({\n  $active,\n  theme\n}) => $active ? theme.colors.primary : theme.colors.lightText};\n  font-weight: ${({\n  $active\n}) => $active ? '600' : '400'};\n  text-align: center;\n  max-width: 100px;\n`;\n_c8 = StepLabel;\nconst StepContent = styled.div`\n  margin-bottom: 2rem;\n`;\n_c9 = StepContent;\nconst StepTitle = styled.h2`\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n  color: ${({\n  theme\n}) => theme.colors.primary};\n`;\n_c0 = StepTitle;\nconst StepDescription = styled.p`\n  color: ${({\n  theme\n}) => theme.colors.lightText};\n  margin-bottom: 2rem;\n`;\n_c1 = StepDescription;\nconst FormActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n`;\n_c10 = FormActions;\nconst LoadingOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  color: white;\n`;\n_c11 = LoadingOverlay;\nconst Spinner = styled.div`\n  border: 4px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top: 4px solid white;\n  width: 40px;\n  height: 40px;\n  margin-bottom: 1rem;\n  animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\n// Initial form steps\n_c12 = Spinner;\nconst initialSteps = [{\n  id: 'basic-info',\n  title: 'Basic Information',\n  description: 'Let\\'s start with some basic information about your product.',\n  fields: [{\n    id: 'name',\n    question_text: 'Product Name',\n    question_type: 'text',\n    required: true\n  }, {\n    id: 'description',\n    question_text: 'Product Description',\n    question_type: 'text',\n    required: true,\n    tooltip: 'Provide a detailed description of your product, including its purpose and benefits.'\n  }, {\n    id: 'category',\n    question_text: 'Product Category',\n    question_type: 'select',\n    required: true,\n    options: [{\n      value: 'supplements',\n      label: 'Supplements'\n    }, {\n      value: 'food',\n      label: 'Food & Beverage'\n    }, {\n      value: 'cosmetics',\n      label: 'Cosmetics'\n    }, {\n      value: 'personal_care',\n      label: 'Personal Care'\n    }, {\n      value: 'household',\n      label: 'Household Products'\n    }, {\n      value: 'other',\n      label: 'Other'\n    }]\n  }]\n}, {\n  id: 'ingredients',\n  title: 'Ingredients & Manufacturing',\n  description: 'Tell us about what goes into your product and how it\\'s made.',\n  fields: [{\n    id: 'ingredients',\n    question_text: 'Ingredients',\n    question_type: 'text',\n    required: true,\n    tooltip: 'List all ingredients in your product. Separate each ingredient with a comma.'\n  }, {\n    id: 'manufacturing_location',\n    question_text: 'Manufacturing Location',\n    question_type: 'text',\n    required: true\n  }, {\n    id: 'certifications',\n    question_text: 'Certifications',\n    question_type: 'text',\n    required: false,\n    tooltip: 'List any certifications your product has (e.g., USDA Organic, Non-GMO Project Verified). Separate each certification with a comma.'\n  }]\n}, {\n  id: 'additional-questions',\n  title: 'Additional Questions',\n  description: 'Based on your product information, we\\'ll generate some follow-up questions to enhance transparency.',\n  fields: []\n}, {\n  id: 'review',\n  title: 'Review & Submit',\n  description: 'Review your information before submitting.',\n  fields: []\n}];\n\n// Validation schema for each step\nconst validationSchemas = [\n// Step 1: Basic Information\nYup.object({\n  name: Yup.string().required('Product name is required'),\n  description: Yup.string().required('Product description is required'),\n  category: Yup.string().required('Product category is required')\n}),\n// Step 2: Ingredients & Manufacturing\nYup.object({\n  ingredients: Yup.string().required('Ingredients are required'),\n  manufacturing_location: Yup.string().required('Manufacturing location is required'),\n  certifications: Yup.string()\n}),\n// Step 3: Additional Questions (dynamic validation will be added)\nYup.object({}),\n// Step 4: Review & Submit\nYup.object({})];\nconst ProductForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [steps, setSteps] = useState(initialSteps);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState('');\n\n  // Initial form values\n  const initialValues = {\n    name: '',\n    description: '',\n    category: '',\n    ingredients: '',\n    manufacturing_location: '',\n    certifications: ''\n  };\n\n  // Generate additional questions based on product information\n  const generateAdditionalQuestions = async values => {\n    setIsLoading(true);\n    setLoadingMessage('Generating intelligent follow-up questions...');\n    try {\n      // Parse ingredients and certifications from comma-separated strings to arrays\n      const ingredientsArray = values.ingredients ? values.ingredients.split(',').map(item => item.trim()) : [];\n      const certificationsArray = values.certifications ? values.certifications.split(',').map(item => item.trim()) : [];\n\n      // Create product object for AI service\n      const product = {\n        name: values.name,\n        description: values.description,\n        category: values.category,\n        ingredients: ingredientsArray,\n        manufacturing_location: values.manufacturing_location,\n        certifications: certificationsArray\n      };\n\n      // Call AI service to generate questions\n      const response = await aiApi.generateQuestions({\n        product\n      });\n      if (response.success && response.data) {\n        // Update the additional questions step with generated questions\n        const updatedSteps = [...steps];\n        updatedSteps[2].fields = response.data.questions;\n\n        // Update validation schema for additional questions\n        const additionalQuestionsSchema = {};\n        response.data.questions.forEach(question => {\n          if (question.required) {\n            additionalQuestionsSchema[question.id || ''] = Yup.string().required(`${question.question_text} is required`);\n          }\n        });\n        validationSchemas[2] = Yup.object(additionalQuestionsSchema);\n        setSteps(updatedSteps);\n      } else {\n        // If AI service fails, use some default questions\n        const defaultQuestions = [{\n          id: 'sourcing',\n          question_text: 'How are your ingredients sourced?',\n          question_type: 'text',\n          required: true\n        }, {\n          id: 'testing',\n          question_text: 'What testing procedures do you use to ensure product safety?',\n          question_type: 'text',\n          required: true\n        }, {\n          id: 'packaging',\n          question_text: 'Describe your packaging materials and sustainability practices.',\n          question_type: 'text',\n          required: true\n        }];\n        const updatedSteps = [...steps];\n        updatedSteps[2].fields = defaultQuestions;\n\n        // Update validation schema for default questions\n        validationSchemas[2] = Yup.object({\n          sourcing: Yup.string().required('This field is required'),\n          testing: Yup.string().required('This field is required'),\n          packaging: Yup.string().required('This field is required')\n        });\n        setSteps(updatedSteps);\n      }\n    } catch (error) {\n      console.error('Error generating questions:', error);\n      // Use default questions on error\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    if (currentStep < steps.length - 1) {\n      setSubmitting(false);\n\n      // If moving from step 2 to step 3, generate additional questions\n      if (currentStep === 1) {\n        await generateAdditionalQuestions(values);\n      }\n      setCurrentStep(currentStep + 1);\n      return;\n    }\n\n    // Final submission\n    setIsLoading(true);\n    setLoadingMessage('Submitting your product information...');\n    try {\n      // Parse ingredients and certifications from comma-separated strings to arrays\n      const ingredientsArray = values.ingredients ? values.ingredients.split(',').map(item => item.trim()) : [];\n      const certificationsArray = values.certifications ? values.certifications.split(',').map(item => item.trim()) : [];\n\n      // Create product object for submission\n      const product = {\n        name: values.name,\n        description: values.description,\n        category: values.category,\n        ingredients: ingredientsArray,\n        manufacturing_location: values.manufacturing_location,\n        certifications: certificationsArray,\n        additional_info: {}\n      };\n\n      // Add answers to additional questions\n      steps[2].fields.forEach(field => {\n        if (field.id && values[field.id]) {\n          product.additional_info[field.id] = values[field.id];\n        }\n      });\n\n      // Submit product to API\n      const response = await productApi.createProduct(product);\n      if (response.success && response.data) {\n        // Navigate to report preview page\n        navigate(`/report/${response.data.id}`);\n      } else {\n        // Handle error\n        console.error('Error submitting product:', response.error);\n        alert(`Error: ${response.error || 'Failed to submit product. Please try again.'}`);\n      }\n    } catch (error) {\n      console.error('Error submitting product:', error);\n      alert('An unexpected error occurred. Please try again.');\n    } finally {\n      setIsLoading(false);\n      setSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(FormHeader, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Product Submission Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormDescription, {\n          children: \"Complete the form below to generate a transparency report for your product.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StepIndicator, {\n        children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(Step, {\n          $active: currentStep === index,\n          $completed: currentStep > index,\n          children: [/*#__PURE__*/_jsxDEV(StepCircle, {\n            $active: currentStep === index,\n            $completed: currentStep > index,\n            children: currentStep > index ? '✓' : index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StepLabel, {\n            $active: currentStep === index,\n            children: step.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)]\n        }, step.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchemas[currentStep],\n        onSubmit: handleSubmit,\n        validateOnChange: false,\n        validateOnBlur: true,\n        children: ({\n          isSubmitting,\n          values\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(StepContent, {\n            children: [/*#__PURE__*/_jsxDEV(StepTitle, {\n              children: steps[currentStep].title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StepDescription, {\n              children: steps[currentStep].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 17\n            }, this), currentStep === 3 ?\n            /*#__PURE__*/\n            // Review step - show summary of all inputs\n            _jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Basic Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Product Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 24\n                }, this), \" \", values.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 24\n                }, this), \" \", values.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Category:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 24\n                }, this), \" \", values.category]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Ingredients & Manufacturing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ingredients:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 24\n                }, this), \" \", values.ingredients]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Manufacturing Location:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 24\n                }, this), \" \", values.manufacturing_location]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Certifications:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 24\n                }, this), \" \", values.certifications || 'None']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Additional Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 21\n              }, this), steps[2].fields.map(field => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [field.question_text, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 25\n                }, this), \" \", values[field.id || ''] || 'Not provided']\n              }, field.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 19\n            }, this) :\n            // Regular form fields for current step\n            steps[currentStep].fields.map(field => {\n              var _field$options;\n              return /*#__PURE__*/_jsxDEV(FormField, {\n                label: field.question_text,\n                name: field.id || '',\n                type: field.question_type === 'select' ? 'select' : field.question_type === 'multiselect' ? 'checkbox' : 'text',\n                as: field.question_type === 'text' ? 'textarea' : undefined,\n                options: (_field$options = field.options) === null || _field$options === void 0 ? void 0 : _field$options.map(option => ({\n                  value: option,\n                  label: option\n                })),\n                tooltip: field.tooltip,\n                required: field.required\n              }, field.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n            children: [currentStep > 0 && /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline\",\n              onClick: () => setCurrentStep(currentStep - 1),\n              disabled: isSubmitting,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: isSubmitting,\n              isLoading: isSubmitting,\n              children: currentStep < steps.length - 1 ? 'Next' : 'Submit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: loadingMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 427,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductForm, \"DUOS53ZPX9XxlUenQ8rsx5fqxhE=\", false, function () {\n  return [useNavigate];\n});\n_c13 = ProductForm;\nexport default ProductForm;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"FormContainer\");\n$RefreshReg$(_c2, \"FormHeader\");\n$RefreshReg$(_c3, \"FormTitle\");\n$RefreshReg$(_c4, \"FormDescription\");\n$RefreshReg$(_c5, \"StepIndicator\");\n$RefreshReg$(_c6, \"Step\");\n$RefreshReg$(_c7, \"StepCircle\");\n$RefreshReg$(_c8, \"StepLabel\");\n$RefreshReg$(_c9, \"StepContent\");\n$RefreshReg$(_c0, \"StepTitle\");\n$RefreshReg$(_c1, \"StepDescription\");\n$RefreshReg$(_c10, \"FormActions\");\n$RefreshReg$(_c11, \"LoadingOverlay\");\n$RefreshReg$(_c12, \"Spinner\");\n$RefreshReg$(_c13, \"ProductForm\");","map":{"version":3,"names":["React","useState","useNavigate","styled","Formik","Form","Yup","FormField","Button","productApi","aiApi","jsxDEV","_jsxDEV","FormContainer","div","theme","borderRadius","default","shadows","medium","breakpoints","md","_c","FormHeader","_c2","FormTitle","h1","colors","primary","_c3","FormDescription","p","lightText","_c4","StepIndicator","border","_c5","Step","_c6","StepCircle","$active","$completed","success","lightBg","transitions","_c7","StepLabel","span","_c8","StepContent","_c9","StepTitle","h2","_c0","StepDescription","_c1","FormActions","_c10","LoadingOverlay","_c11","Spinner","_c12","initialSteps","id","title","description","fields","question_text","question_type","required","tooltip","options","value","label","validationSchemas","object","name","string","category","ingredients","manufacturing_location","certifications","ProductForm","_s","navigate","currentStep","setCurrentStep","steps","setSteps","isLoading","setIsLoading","loadingMessage","setLoadingMessage","initialValues","generateAdditionalQuestions","values","ingredientsArray","split","map","item","trim","certificationsArray","product","response","generateQuestions","data","updatedSteps","questions","additionalQuestionsSchema","forEach","question","defaultQuestions","sourcing","testing","packaging","error","console","handleSubmit","setSubmitting","length","additional_info","field","createProduct","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","step","index","validationSchema","onSubmit","validateOnChange","validateOnBlur","isSubmitting","_field$options","type","as","undefined","option","variant","onClick","disabled","_c13","$RefreshReg$"],"sources":["C:/Users/Dheeraj/Desktop/Altibbe_assignemnt/frontend/src/pages/ProductForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport * as Yup from 'yup';\nimport FormField from '../components/FormField';\nimport Button from '../components/Button';\nimport { productApi, aiApi } from '../services/api';\nimport { Product, Question, FormStep, FormValues } from '../types';\n\nconst FormContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  background-color: white;\n  border-radius: ${({ theme }) => theme.borderRadius.default};\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.md}) {\n    padding: 1.5rem;\n  }\n`;\n\nconst FormHeader = styled.div`\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n\nconst FormTitle = styled.h1`\n  font-size: 2rem;\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 1rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.md}) {\n    font-size: 1.75rem;\n  }\n`;\n\nconst FormDescription = styled.p`\n  color: ${({ theme }) => theme.colors.lightText};\n  font-size: 1.125rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.md}) {\n    font-size: 1rem;\n  }\n`;\n\nconst StepIndicator = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 2rem;\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    right: 0;\n    height: 2px;\n    background-color: ${({ theme }) => theme.colors.border};\n    transform: translateY(-50%);\n    z-index: 0;\n  }\n`;\n\nconst Step = styled.div<{ $active: boolean; $completed: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n  z-index: 1;\n`;\n\nconst StepCircle = styled.div<{ $active: boolean; $completed: boolean }>`\n  width: 2.5rem;\n  height: 2.5rem;\n  border-radius: 50%;\n  background-color: ${({ $active, $completed, theme }) =>\n    $completed\n      ? theme.colors.success\n      : $active\n      ? theme.colors.primary\n      : theme.colors.lightBg};\n  color: ${({ $active, $completed }) => ($active || $completed ? 'white' : '#666')};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n  transition: all ${({ theme }) => theme.transitions.default};\n  border: 2px solid ${({ $active, $completed, theme }) =>\n    $completed\n      ? theme.colors.success\n      : $active\n      ? theme.colors.primary\n      : theme.colors.border};\n`;\n\nconst StepLabel = styled.span<{ $active: boolean }>`\n  font-size: 0.875rem;\n  color: ${({ $active, theme }) => ($active ? theme.colors.primary : theme.colors.lightText)};\n  font-weight: ${({ $active }) => ($active ? '600' : '400')};\n  text-align: center;\n  max-width: 100px;\n`;\n\nconst StepContent = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst StepTitle = styled.h2`\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n  color: ${({ theme }) => theme.colors.primary};\n`;\n\nconst StepDescription = styled.p`\n  color: ${({ theme }) => theme.colors.lightText};\n  margin-bottom: 2rem;\n`;\n\nconst FormActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n`;\n\nconst LoadingOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  color: white;\n`;\n\nconst Spinner = styled.div`\n  border: 4px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top: 4px solid white;\n  width: 40px;\n  height: 40px;\n  margin-bottom: 1rem;\n  animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\n// Initial form steps\nconst initialSteps: FormStep[] = [\n  {\n    id: 'basic-info',\n    title: 'Basic Information',\n    description: 'Let\\'s start with some basic information about your product.',\n    fields: [\n      {\n        id: 'name',\n        question_text: 'Product Name',\n        question_type: 'text',\n        required: true,\n      },\n      {\n        id: 'description',\n        question_text: 'Product Description',\n        question_type: 'text',\n        required: true,\n        tooltip: 'Provide a detailed description of your product, including its purpose and benefits.',\n      },\n      {\n        id: 'category',\n        question_text: 'Product Category',\n        question_type: 'select',\n        required: true,\n        options: [\n          { value: 'supplements', label: 'Supplements' },\n          { value: 'food', label: 'Food & Beverage' },\n          { value: 'cosmetics', label: 'Cosmetics' },\n          { value: 'personal_care', label: 'Personal Care' },\n          { value: 'household', label: 'Household Products' },\n          { value: 'other', label: 'Other' },\n        ],\n      },\n    ],\n  },\n  {\n    id: 'ingredients',\n    title: 'Ingredients & Manufacturing',\n    description: 'Tell us about what goes into your product and how it\\'s made.',\n    fields: [\n      {\n        id: 'ingredients',\n        question_text: 'Ingredients',\n        question_type: 'text',\n        required: true,\n        tooltip: 'List all ingredients in your product. Separate each ingredient with a comma.',\n      },\n      {\n        id: 'manufacturing_location',\n        question_text: 'Manufacturing Location',\n        question_type: 'text',\n        required: true,\n      },\n      {\n        id: 'certifications',\n        question_text: 'Certifications',\n        question_type: 'text',\n        required: false,\n        tooltip: 'List any certifications your product has (e.g., USDA Organic, Non-GMO Project Verified). Separate each certification with a comma.',\n      },\n    ],\n  },\n  {\n    id: 'additional-questions',\n    title: 'Additional Questions',\n    description: 'Based on your product information, we\\'ll generate some follow-up questions to enhance transparency.',\n    fields: [],\n  },\n  {\n    id: 'review',\n    title: 'Review & Submit',\n    description: 'Review your information before submitting.',\n    fields: [],\n  },\n];\n\n// Validation schema for each step\nconst validationSchemas = [\n  // Step 1: Basic Information\n  Yup.object({\n    name: Yup.string().required('Product name is required'),\n    description: Yup.string().required('Product description is required'),\n    category: Yup.string().required('Product category is required'),\n  }),\n  // Step 2: Ingredients & Manufacturing\n  Yup.object({\n    ingredients: Yup.string().required('Ingredients are required'),\n    manufacturing_location: Yup.string().required('Manufacturing location is required'),\n    certifications: Yup.string(),\n  }),\n  // Step 3: Additional Questions (dynamic validation will be added)\n  Yup.object({}),\n  // Step 4: Review & Submit\n  Yup.object({}),\n];\n\nconst ProductForm: React.FC = () => {\n  const navigate = useNavigate();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [steps, setSteps] = useState<FormStep[]>(initialSteps);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState('');\n\n  // Initial form values\n  const initialValues: FormValues = {\n    name: '',\n    description: '',\n    category: '',\n    ingredients: '',\n    manufacturing_location: '',\n    certifications: '',\n  };\n\n  // Generate additional questions based on product information\n  const generateAdditionalQuestions = async (values: FormValues) => {\n    setIsLoading(true);\n    setLoadingMessage('Generating intelligent follow-up questions...');\n\n    try {\n      // Parse ingredients and certifications from comma-separated strings to arrays\n      const ingredientsArray = values.ingredients\n        ? values.ingredients.split(',').map((item: string) => item.trim())\n        : [];\n      \n      const certificationsArray = values.certifications\n        ? values.certifications.split(',').map((item: string) => item.trim())\n        : [];\n\n      // Create product object for AI service\n      const product: Product = {\n        name: values.name,\n        description: values.description,\n        category: values.category,\n        ingredients: ingredientsArray,\n        manufacturing_location: values.manufacturing_location,\n        certifications: certificationsArray,\n      };\n\n      // Call AI service to generate questions\n      const response = await aiApi.generateQuestions({ product });\n\n      if (response.success && response.data) {\n        // Update the additional questions step with generated questions\n        const updatedSteps = [...steps];\n        updatedSteps[2].fields = response.data.questions;\n\n        // Update validation schema for additional questions\n        const additionalQuestionsSchema: { [key: string]: any } = {};\n        response.data.questions.forEach((question) => {\n          if (question.required) {\n            additionalQuestionsSchema[question.id || ''] = Yup.string().required(`${question.question_text} is required`);\n          }\n        });\n\n        validationSchemas[2] = Yup.object(additionalQuestionsSchema);\n\n        setSteps(updatedSteps);\n      } else {\n        // If AI service fails, use some default questions\n        const defaultQuestions: Question[] = [\n          {\n            id: 'sourcing',\n            question_text: 'How are your ingredients sourced?',\n            question_type: 'text',\n            required: true,\n          },\n          {\n            id: 'testing',\n            question_text: 'What testing procedures do you use to ensure product safety?',\n            question_type: 'text',\n            required: true,\n          },\n          {\n            id: 'packaging',\n            question_text: 'Describe your packaging materials and sustainability practices.',\n            question_type: 'text',\n            required: true,\n          },\n        ];\n\n        const updatedSteps = [...steps];\n        updatedSteps[2].fields = defaultQuestions;\n\n        // Update validation schema for default questions\n        validationSchemas[2] = Yup.object({\n          sourcing: Yup.string().required('This field is required'),\n          testing: Yup.string().required('This field is required'),\n          packaging: Yup.string().required('This field is required'),\n        });\n\n        setSteps(updatedSteps);\n      }\n    } catch (error) {\n      console.error('Error generating questions:', error);\n      // Use default questions on error\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async (values: FormValues, { setSubmitting }: FormikHelpers<FormValues>) => {\n    if (currentStep < steps.length - 1) {\n      setSubmitting(false);\n      \n      // If moving from step 2 to step 3, generate additional questions\n      if (currentStep === 1) {\n        await generateAdditionalQuestions(values);\n      }\n      \n      setCurrentStep(currentStep + 1);\n      return;\n    }\n\n    // Final submission\n    setIsLoading(true);\n    setLoadingMessage('Submitting your product information...');\n\n    try {\n      // Parse ingredients and certifications from comma-separated strings to arrays\n      const ingredientsArray = values.ingredients\n        ? values.ingredients.split(',').map((item) => item.trim())\n        : [];\n      \n      const certificationsArray = values.certifications\n        ? values.certifications.split(',').map((item) => item.trim())\n        : [];\n\n      // Create product object for submission\n      const product: Product = {\n        name: values.name,\n        description: values.description,\n        category: values.category,\n        ingredients: ingredientsArray,\n        manufacturing_location: values.manufacturing_location,\n        certifications: certificationsArray,\n        additional_info: {},\n      };\n\n      // Add answers to additional questions\n      steps[2].fields.forEach((field) => {\n        if (field.id && values[field.id]) {\n          product.additional_info![field.id] = values[field.id];\n        }\n      });\n\n      // Submit product to API\n      const response = await productApi.createProduct(product);\n\n      if (response.success && response.data) {\n        // Navigate to report preview page\n        navigate(`/report/${response.data.id}`);\n      } else {\n        // Handle error\n        console.error('Error submitting product:', response.error);\n        alert(`Error: ${response.error || 'Failed to submit product. Please try again.'}`);\n      }\n    } catch (error) {\n      console.error('Error submitting product:', error);\n      alert('An unexpected error occurred. Please try again.');\n    } finally {\n      setIsLoading(false);\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <FormContainer>\n        <FormHeader>\n          <FormTitle>Product Submission Form</FormTitle>\n          <FormDescription>\n            Complete the form below to generate a transparency report for your product.\n          </FormDescription>\n        </FormHeader>\n\n        <StepIndicator>\n          {steps.map((step, index) => (\n            <Step\n              key={step.id}\n              $active={currentStep === index}\n              $completed={currentStep > index}\n            >\n              <StepCircle $active={currentStep === index} $completed={currentStep > index}>\n                {currentStep > index ? '✓' : index + 1}\n              </StepCircle>\n              <StepLabel $active={currentStep === index}>{step.title}</StepLabel>\n            </Step>\n          ))}\n        </StepIndicator>\n\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchemas[currentStep]}\n          onSubmit={handleSubmit}\n          validateOnChange={false}\n          validateOnBlur={true}\n        >\n          {({ isSubmitting, values }) => (\n            <Form>\n              <StepContent>\n                <StepTitle>{steps[currentStep].title}</StepTitle>\n                <StepDescription>{steps[currentStep].description}</StepDescription>\n\n                {currentStep === 3 ? (\n                  // Review step - show summary of all inputs\n                  <div>\n                    <h3>Basic Information</h3>\n                    <p><strong>Product Name:</strong> {values.name}</p>\n                    <p><strong>Description:</strong> {values.description}</p>\n                    <p><strong>Category:</strong> {values.category}</p>\n\n                    <h3>Ingredients & Manufacturing</h3>\n                    <p><strong>Ingredients:</strong> {values.ingredients}</p>\n                    <p><strong>Manufacturing Location:</strong> {values.manufacturing_location}</p>\n                    <p><strong>Certifications:</strong> {values.certifications || 'None'}</p>\n\n                    <h3>Additional Information</h3>\n                    {steps[2].fields.map((field) => (\n                      <p key={field.id}>\n                        <strong>{field.question_text}:</strong> {values[field.id || ''] || 'Not provided'}\n                      </p>\n                    ))}\n                  </div>\n                ) : (\n                  // Regular form fields for current step\n                  steps[currentStep].fields.map((field) => (\n                    <FormField\n                      key={field.id}\n                      label={field.question_text}\n                      name={field.id || ''}\n                      type={field.question_type === 'select' ? 'select' : field.question_type === 'multiselect' ? 'checkbox' : 'text'}\n                      as={field.question_type === 'text' ? 'textarea' : undefined}\n                      options={field.options?.map((option) => ({ value: option, label: option }))}\n                      tooltip={field.tooltip}\n                      required={field.required}\n                    />\n                  ))\n                )}\n              </StepContent>\n\n              <FormActions>\n                {currentStep > 0 && (\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    onClick={() => setCurrentStep(currentStep - 1)}\n                    disabled={isSubmitting}\n                  >\n                    Back\n                  </Button>\n                )}\n                <Button\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  isLoading={isSubmitting}\n                >\n                  {currentStep < steps.length - 1 ? 'Next' : 'Submit'}\n                </Button>\n              </FormActions>\n            </Form>\n          )}\n        </Formik>\n      </FormContainer>\n\n      {isLoading && (\n        <LoadingOverlay>\n          <Spinner />\n          <p>{loadingMessage}</p>\n        </LoadingOverlay>\n      )}\n    </div>\n  );\n};\n\nexport default ProductForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}