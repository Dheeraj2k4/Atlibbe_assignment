{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useAuth}from'../../contexts/AuthContext';/**\n * Profile Form Component\n * Allows users to view and update their profile information\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProfileForm=()=>{const{user,updateProfile,error,clearError,isLoading}=useAuth();const[name,setName]=useState('');const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[formError,setFormError]=useState('');const[successMessage,setSuccessMessage]=useState('');// Initialize form with user data\nuseEffect(()=>{if(user){setName(user.name);setEmail(user.email);}},[user]);/**\n   * Handle form submission\n   * @param e Form submit event\n   */const handleSubmit=async e=>{e.preventDefault();setFormError('');setSuccessMessage('');clearError();// Check if passwords match when updating password\nif(password&&password!==confirmPassword){setFormError('Passwords do not match');return;}// Check password length if provided\nif(password&&password.length<6){setFormError('Password must be at least 6 characters');return;}try{// Only include fields that have changed\nconst updateData={};if(name!==(user===null||user===void 0?void 0:user.name))updateData.name=name;if(email!==(user===null||user===void 0?void 0:user.email))updateData.email=email;if(password)updateData.password=password;// Only update if there are changes\nif(Object.keys(updateData).length===0){setFormError('No changes to update');return;}// Update profile\nawait updateProfile(updateData);// Clear password fields\nsetPassword('');setConfirmPassword('');// Show success message\nsetSuccessMessage('Profile updated successfully');}catch(err){setFormError(err.message||'Failed to update profile');}};return/*#__PURE__*/_jsx(\"div\",{className:\"profile-form-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"profile-form-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your Profile\"}),(error||formError)&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:formError||error}),successMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",children:successMessage}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",value:name,onChange:e=>setName(e.target.value),disabled:isLoading,placeholder:\"Enter your name\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),disabled:isLoading,placeholder:\"Enter your email\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"New Password (leave blank to keep current)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",value:password,onChange:e=>setPassword(e.target.value),disabled:isLoading,placeholder:\"Enter new password\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",children:\"Confirm New Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"confirmPassword\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),disabled:isLoading,placeholder:\"Confirm new password\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"update-button\",disabled:isLoading,children:isLoading?'Updating...':'Update Profile'})]})]})});};export default ProfileForm;","map":{"version":3,"names":["React","useState","useEffect","useAuth","jsx","_jsx","jsxs","_jsxs","ProfileForm","user","updateProfile","error","clearError","isLoading","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","formError","setFormError","successMessage","setSuccessMessage","handleSubmit","e","preventDefault","length","updateData","Object","keys","err","message","className","children","onSubmit","htmlFor","type","id","value","onChange","target","disabled","placeholder","required"],"sources":["C:/Users/Dheeraj/Desktop/Altibbe_assignemnt/frontend/src/components/user/ProfileForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\n\n/**\n * Profile Form Component\n * Allows users to view and update their profile information\n */\nconst ProfileForm: React.FC = () => {\n  const { user, updateProfile, error, clearError, isLoading } = useAuth();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [formError, setFormError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Initialize form with user data\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setEmail(user.email);\n    }\n  }, [user]);\n\n  /**\n   * Handle form submission\n   * @param e Form submit event\n   */\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setFormError('');\n    setSuccessMessage('');\n    clearError();\n\n    // Check if passwords match when updating password\n    if (password && password !== confirmPassword) {\n      setFormError('Passwords do not match');\n      return;\n    }\n\n    // Check password length if provided\n    if (password && password.length < 6) {\n      setFormError('Password must be at least 6 characters');\n      return;\n    }\n\n    try {\n      // Only include fields that have changed\n      const updateData: { name?: string; email?: string; password?: string } = {};\n      \n      if (name !== user?.name) updateData.name = name;\n      if (email !== user?.email) updateData.email = email;\n      if (password) updateData.password = password;\n\n      // Only update if there are changes\n      if (Object.keys(updateData).length === 0) {\n        setFormError('No changes to update');\n        return;\n      }\n\n      // Update profile\n      await updateProfile(updateData);\n      \n      // Clear password fields\n      setPassword('');\n      setConfirmPassword('');\n      \n      // Show success message\n      setSuccessMessage('Profile updated successfully');\n    } catch (err: any) {\n      setFormError(err.message || 'Failed to update profile');\n    }\n  };\n\n  return (\n    <div className=\"profile-form-container\">\n      <div className=\"profile-form-card\">\n        <h2>Your Profile</h2>\n        \n        {/* Display errors */}\n        {(error || formError) && (\n          <div className=\"error-message\">\n            {formError || error}\n          </div>\n        )}\n        \n        {/* Display success message */}\n        {successMessage && (\n          <div className=\"success-message\">\n            {successMessage}\n          </div>\n        )}\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              disabled={isLoading}\n              placeholder=\"Enter your name\"\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              disabled={isLoading}\n              placeholder=\"Enter your email\"\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"password\">New Password (leave blank to keep current)</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              disabled={isLoading}\n              placeholder=\"Enter new password\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">Confirm New Password</label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              disabled={isLoading}\n              placeholder=\"Confirm new password\"\n            />\n          </div>\n          \n          <button \n            type=\"submit\" \n            className=\"update-button\" \n            disabled={isLoading}\n          >\n            {isLoading ? 'Updating...' : 'Update Profile'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}