{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import ReportGenerationForm from'../../components/reports/ReportGenerationForm';/**\n * Generate Report Page\n * Page for generating a new report for a specific product\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GenerateReportPage=()=>{const{productId}=useParams();const navigate=useNavigate();const[productName,setProductName]=useState('');const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);// Fetch product details\nuseEffect(()=>{const fetchProductDetails=async()=>{if(!productId){setError('Product ID is required');setIsLoading(false);return;}try{// In a real application, you would fetch product details from an API\n// For now, we'll just simulate a product name\nsetProductName(`Product ${productId}`);setIsLoading(false);}catch(err){setError(err.message||'Failed to load product details');setIsLoading(false);}};fetchProductDetails();},[productId]);if(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading product details...\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"error-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(-1),className:\"button\",children:\"Go Back\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"page-container generate-report-page\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Generate Report\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Create a new report for \",productName]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"page-content\",children:productId&&/*#__PURE__*/_jsx(ReportGenerationForm,{productId:productId,productName:productName})})]});};export default GenerateReportPage;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","ReportGenerationForm","jsx","_jsx","jsxs","_jsxs","GenerateReportPage","productId","navigate","productName","setProductName","isLoading","setIsLoading","error","setError","fetchProductDetails","err","message","className","children","onClick"],"sources":["C:/Users/Dheeraj/Desktop/Altibbe_assignemnt/frontend/src/pages/reports/GenerateReportPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport ReportGenerationForm from '../../components/reports/ReportGenerationForm';\n\n/**\n * Generate Report Page\n * Page for generating a new report for a specific product\n */\nconst GenerateReportPage: React.FC = () => {\n  const { productId } = useParams<{ productId: string }>();\n  const navigate = useNavigate();\n  const [productName, setProductName] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Fetch product details\n  useEffect(() => {\n    const fetchProductDetails = async () => {\n      if (!productId) {\n        setError('Product ID is required');\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        // In a real application, you would fetch product details from an API\n        // For now, we'll just simulate a product name\n        setProductName(`Product ${productId}`);\n        setIsLoading(false);\n      } catch (err: any) {\n        setError(err.message || 'Failed to load product details');\n        setIsLoading(false);\n      }\n    };\n\n    fetchProductDetails();\n  }, [productId]);\n\n  if (isLoading) {\n    return <div className=\"loading\">Loading product details...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <div className=\"error-message\">{error}</div>\n        <button onClick={() => navigate(-1)} className=\"button\">\n          Go Back\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"page-container generate-report-page\">\n      <div className=\"page-header\">\n        <h1>Generate Report</h1>\n        <p>Create a new report for {productName}</p>\n      </div>\n      <div className=\"page-content\">\n        {productId && <ReportGenerationForm productId={productId} productName={productName} />}\n      </div>\n    </div>\n  );\n};\n\nexport default GenerateReportPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,CAAEC,WAAW,KAAQ,kBAAkB,CACzD,MAAO,CAAAC,oBAAoB,KAAM,+CAA+C,CAEhF;AACA;AACA;AACA,GAHA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAIA,KAAM,CAAAC,kBAA4B,CAAGA,CAAA,GAAM,CACzC,KAAM,CAAEC,SAAU,CAAC,CAAGR,SAAS,CAAwB,CAAC,CACxD,KAAM,CAAAS,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACS,WAAW,CAAEC,cAAc,CAAC,CAAGb,QAAQ,CAAS,EAAE,CAAC,CAC1D,KAAM,CAACc,SAAS,CAAEC,YAAY,CAAC,CAAGf,QAAQ,CAAU,IAAI,CAAC,CACzD,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAgB,IAAI,CAAC,CAEvD;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAiB,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CAACR,SAAS,CAAE,CACdO,QAAQ,CAAC,wBAAwB,CAAC,CAClCF,YAAY,CAAC,KAAK,CAAC,CACnB,OACF,CAEA,GAAI,CACF;AACA;AACAF,cAAc,CAAC,WAAWH,SAAS,EAAE,CAAC,CACtCK,YAAY,CAAC,KAAK,CAAC,CACrB,CAAE,MAAOI,GAAQ,CAAE,CACjBF,QAAQ,CAACE,GAAG,CAACC,OAAO,EAAI,gCAAgC,CAAC,CACzDL,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAEDG,mBAAmB,CAAC,CAAC,CACvB,CAAC,CAAE,CAACR,SAAS,CAAC,CAAC,CAEf,GAAII,SAAS,CAAE,CACb,mBAAOR,IAAA,QAAKe,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,4BAA0B,CAAK,CAAC,CAClE,CAEA,GAAIN,KAAK,CAAE,CACT,mBACER,KAAA,QAAKa,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BhB,IAAA,QAAKe,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEN,KAAK,CAAM,CAAC,cAC5CV,IAAA,WAAQiB,OAAO,CAAEA,CAAA,GAAMZ,QAAQ,CAAC,CAAC,CAAC,CAAE,CAACU,SAAS,CAAC,QAAQ,CAAAC,QAAA,CAAC,SAExD,CAAQ,CAAC,EACN,CAAC,CAEV,CAEA,mBACEd,KAAA,QAAKa,SAAS,CAAC,qCAAqC,CAAAC,QAAA,eAClDd,KAAA,QAAKa,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BhB,IAAA,OAAAgB,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBd,KAAA,MAAAc,QAAA,EAAG,0BAAwB,CAACV,WAAW,EAAI,CAAC,EACzC,CAAC,cACNN,IAAA,QAAKe,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1BZ,SAAS,eAAIJ,IAAA,CAACF,oBAAoB,EAACM,SAAS,CAAEA,SAAU,CAACE,WAAW,CAAEA,WAAY,CAAE,CAAC,CACnF,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}