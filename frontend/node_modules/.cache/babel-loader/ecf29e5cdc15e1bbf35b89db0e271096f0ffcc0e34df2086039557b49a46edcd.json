{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dheeraj\\\\Desktop\\\\Altibbe_assignemnt\\\\frontend\\\\src\\\\components\\\\reports\\\\ReportGenerationForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useReports } from '../../contexts/ReportContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\r\n * Report Generation Form Component\r\n * Allows users to generate reports for a specific product\r\n */\nconst ReportGenerationForm = ({\n  productId,\n  productName\n}) => {\n  _s();\n  const [reportType, setReportType] = useState('standard');\n  const [includeTransparency, setIncludeTransparency] = useState(true);\n  const [includeCertification, setIncludeCertification] = useState(true);\n  const [includeCustomContent, setIncludeCustomContent] = useState(false);\n  const [customContent, setCustomContent] = useState('');\n  const [formError, setFormError] = useState('');\n  const {\n    generateReport,\n    error,\n    clearError,\n    isLoading\n  } = useReports();\n  const navigate = useNavigate();\n\n  /**\r\n   * Handle form submission\r\n   * @param e Form submit event\r\n   */\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('Form submitted');\n    setFormError('');\n    clearError();\n    console.log('Form state:', {\n      reportType,\n      includeTransparency,\n      includeCertification,\n      includeCustomContent,\n      customContent\n    });\n\n    // Validate form\n    if (includeCustomContent && !customContent) {\n      console.log('Form validation failed: Missing custom content');\n      setFormError('Please provide custom content or disable the custom content option');\n      return;\n    }\n    try {\n      // Prepare metadata\n      const metadata = {\n        includeTransparency,\n        includeCertification\n      };\n\n      // Add custom content if enabled\n      if (includeCustomContent) {\n        metadata.customContent = customContent;\n      }\n      console.log('Calling generateReport with:', {\n        productId,\n        reportType,\n        metadata\n      });\n\n      // Generate report\n      const report = await generateReport({\n        productId,\n        report_type: reportType,\n        metadata\n      });\n      console.log('Report generated successfully:', report);\n      console.log('Navigating to:', `/reports/${report.report_id}`);\n\n      // Navigate to report details\n      navigate(`/reports/${report.report_id}`);\n    } catch (err) {\n      console.error('Error generating report:', err);\n      setFormError(err.message || 'Failed to generate report');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report-generation-form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-generation-form-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Generate Report\", productName ? ` for ${productName}` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), (error || formError) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: formError || error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"reportType\",\n            children: \"Report Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"reportType\",\n            value: reportType,\n            onChange: e => setReportType(e.target.value),\n            disabled: isLoading,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"standard\",\n              children: \"Standard Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"detailed\",\n              children: \"Detailed Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"summary\",\n              children: \"Summary Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"custom\",\n              children: \"Custom Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group checkbox-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: includeTransparency,\n              onChange: e => setIncludeTransparency(e.target.checked),\n              disabled: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), \"Include Transparency Information\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group checkbox-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: includeCertification,\n              onChange: e => setIncludeCertification(e.target.checked),\n              disabled: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), \"Include Certification Information\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group checkbox-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: includeCustomContent,\n              onChange: e => setIncludeCustomContent(e.target.checked),\n              disabled: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), \"Include Custom Content\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), includeCustomContent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"customContent\",\n            children: \"Custom Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"customContent\",\n            value: customContent,\n            onChange: e => setCustomContent(e.target.value),\n            disabled: isLoading,\n            placeholder: \"Enter custom content for the report\",\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"generate-button\",\n          disabled: isLoading,\n          children: isLoading ? 'Generating...' : 'Generate Report'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportGenerationForm, \"E1usBvK4lehILwMYXijo3sKaERQ=\", false, function () {\n  return [useReports, useNavigate];\n});\n_c = ReportGenerationForm;\nexport default ReportGenerationForm;\nvar _c;\n$RefreshReg$(_c, \"ReportGenerationForm\");","map":{"version":3,"names":["React","useState","useNavigate","useReports","jsxDEV","_jsxDEV","ReportGenerationForm","productId","productName","_s","reportType","setReportType","includeTransparency","setIncludeTransparency","includeCertification","setIncludeCertification","includeCustomContent","setIncludeCustomContent","customContent","setCustomContent","formError","setFormError","generateReport","error","clearError","isLoading","navigate","handleSubmit","e","preventDefault","console","log","metadata","report","report_type","report_id","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","disabled","type","checked","placeholder","rows","_c","$RefreshReg$"],"sources":["C:/Users/Dheeraj/Desktop/Altibbe_assignemnt/frontend/src/components/reports/ReportGenerationForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useReports } from '../../contexts/ReportContext';\r\n\r\ninterface ReportGenerationFormProps {\r\n  productId: string;\r\n  productName?: string;\r\n}\r\n\r\n/**\r\n * Report Generation Form Component\r\n * Allows users to generate reports for a specific product\r\n */\r\nconst ReportGenerationForm: React.FC<ReportGenerationFormProps> = ({ productId, productName }) => {\r\n  const [reportType, setReportType] = useState('standard');\r\n  const [includeTransparency, setIncludeTransparency] = useState(true);\r\n  const [includeCertification, setIncludeCertification] = useState(true);\r\n  const [includeCustomContent, setIncludeCustomContent] = useState(false);\r\n  const [customContent, setCustomContent] = useState('');\r\n  const [formError, setFormError] = useState('');\r\n  const { generateReport, error, clearError, isLoading } = useReports();\r\n  const navigate = useNavigate();\r\n\r\n  /**\r\n   * Handle form submission\r\n   * @param e Form submit event\r\n   */\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    console.log('Form submitted');\r\n    setFormError('');\r\n    clearError();\r\n    console.log('Form state:', { reportType, includeTransparency, includeCertification, includeCustomContent, customContent });\r\n\r\n    // Validate form\r\n    if (includeCustomContent && !customContent) {\r\n      console.log('Form validation failed: Missing custom content');\r\n      setFormError('Please provide custom content or disable the custom content option');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Prepare metadata\r\n      const metadata: Record<string, any> = {\r\n        includeTransparency,\r\n        includeCertification,\r\n      };\r\n\r\n      // Add custom content if enabled\r\n      if (includeCustomContent) {\r\n        metadata.customContent = customContent;\r\n      }\r\n      \r\n      console.log('Calling generateReport with:', { productId, reportType, metadata });\r\n\r\n      // Generate report\r\n      const report = await generateReport({\r\n        productId,\r\n        report_type: reportType as 'product_details' | 'transparency' | 'certification' | 'custom',\r\n        metadata,\r\n      });\r\n\r\n      console.log('Report generated successfully:', report);\r\n      console.log('Navigating to:', `/reports/${report.report_id}`);\r\n\r\n      // Navigate to report details\r\n      navigate(`/reports/${report.report_id}`);\r\n    } catch (err: any) {\r\n      console.error('Error generating report:', err);\r\n      setFormError(err.message || 'Failed to generate report');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"report-generation-form-container\">\r\n      <div className=\"report-generation-form-card\">\r\n        <h2>Generate Report{productName ? ` for ${productName}` : ''}</h2>\r\n        \r\n        {/* Display errors */}\r\n        {(error || formError) && (\r\n          <div className=\"error-message\">\r\n            {formError || error}\r\n          </div>\r\n        )}\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"reportType\">Report Type</label>\r\n            <select\r\n              id=\"reportType\"\r\n              value={reportType}\r\n              onChange={(e) => setReportType(e.target.value)}\r\n              disabled={isLoading}\r\n            >\r\n              <option value=\"standard\">Standard Report</option>\r\n              <option value=\"detailed\">Detailed Report</option>\r\n              <option value=\"summary\">Summary Report</option>\r\n              <option value=\"custom\">Custom Report</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"form-group checkbox-group\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={includeTransparency}\r\n                onChange={(e) => setIncludeTransparency(e.target.checked)}\r\n                disabled={isLoading}\r\n              />\r\n              Include Transparency Information\r\n            </label>\r\n          </div>\r\n          \r\n          <div className=\"form-group checkbox-group\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={includeCertification}\r\n                onChange={(e) => setIncludeCertification(e.target.checked)}\r\n                disabled={isLoading}\r\n              />\r\n              Include Certification Information\r\n            </label>\r\n          </div>\r\n          \r\n          <div className=\"form-group checkbox-group\">\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={includeCustomContent}\r\n                onChange={(e) => setIncludeCustomContent(e.target.checked)}\r\n                disabled={isLoading}\r\n              />\r\n              Include Custom Content\r\n            </label>\r\n          </div>\r\n          \r\n          {includeCustomContent && (\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"customContent\">Custom Content</label>\r\n              <textarea\r\n                id=\"customContent\"\r\n                value={customContent}\r\n                onChange={(e) => setCustomContent(e.target.value)}\r\n                disabled={isLoading}\r\n                placeholder=\"Enter custom content for the report\"\r\n                rows={4}\r\n              />\r\n            </div>\r\n          )}\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            className=\"generate-button\" \r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? 'Generating...' : 'Generate Report'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportGenerationForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1D;AACA;AACA;AACA;AACA,MAAMC,oBAAyD,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAChG,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,UAAU,CAAC;EACxD,MAAM,CAACW,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAACa,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtE,MAAM,CAACe,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM;IAAEqB,cAAc;IAAEC,KAAK;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAGtB,UAAU,CAAC,CAAC;EACrE,MAAMuB,QAAQ,GAAGxB,WAAW,CAAC,CAAC;;EAE9B;AACF;AACA;AACA;EACE,MAAMyB,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BV,YAAY,CAAC,EAAE,CAAC;IAChBG,UAAU,CAAC,CAAC;IACZM,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE;MAAErB,UAAU;MAAEE,mBAAmB;MAAEE,oBAAoB;MAAEE,oBAAoB;MAAEE;IAAc,CAAC,CAAC;;IAE1H;IACA,IAAIF,oBAAoB,IAAI,CAACE,aAAa,EAAE;MAC1CY,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;MAC7DV,YAAY,CAAC,oEAAoE,CAAC;MAClF;IACF;IAEA,IAAI;MACF;MACA,MAAMW,QAA6B,GAAG;QACpCpB,mBAAmB;QACnBE;MACF,CAAC;;MAED;MACA,IAAIE,oBAAoB,EAAE;QACxBgB,QAAQ,CAACd,aAAa,GAAGA,aAAa;MACxC;MAEAY,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE;QAAExB,SAAS;QAAEG,UAAU;QAAEsB;MAAS,CAAC,CAAC;;MAEhF;MACA,MAAMC,MAAM,GAAG,MAAMX,cAAc,CAAC;QAClCf,SAAS;QACT2B,WAAW,EAAExB,UAA6E;QAC1FsB;MACF,CAAC,CAAC;MAEFF,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEE,MAAM,CAAC;MACrDH,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,YAAYE,MAAM,CAACE,SAAS,EAAE,CAAC;;MAE7D;MACAT,QAAQ,CAAC,YAAYO,MAAM,CAACE,SAAS,EAAE,CAAC;IAC1C,CAAC,CAAC,OAAOC,GAAQ,EAAE;MACjBN,OAAO,CAACP,KAAK,CAAC,0BAA0B,EAAEa,GAAG,CAAC;MAC9Cf,YAAY,CAACe,GAAG,CAACC,OAAO,IAAI,2BAA2B,CAAC;IAC1D;EACF,CAAC;EAED,oBACEhC,OAAA;IAAKiC,SAAS,EAAC,kCAAkC;IAAAC,QAAA,eAC/ClC,OAAA;MAAKiC,SAAS,EAAC,6BAA6B;MAAAC,QAAA,gBAC1ClC,OAAA;QAAAkC,QAAA,GAAI,iBAAe,EAAC/B,WAAW,GAAG,QAAQA,WAAW,EAAE,GAAG,EAAE;MAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAGjE,CAACpB,KAAK,IAAIH,SAAS,kBAClBf,OAAA;QAAKiC,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BnB,SAAS,IAAIG;MAAK;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CACN,eAEDtC,OAAA;QAAMuC,QAAQ,EAAEjB,YAAa;QAAAY,QAAA,gBAC3BlC,OAAA;UAAKiC,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBlC,OAAA;YAAOwC,OAAO,EAAC,YAAY;YAAAN,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/CtC,OAAA;YACEyC,EAAE,EAAC,YAAY;YACfC,KAAK,EAAErC,UAAW;YAClBsC,QAAQ,EAAGpB,CAAC,IAAKjB,aAAa,CAACiB,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;YAC/CG,QAAQ,EAAEzB,SAAU;YAAAc,QAAA,gBAEpBlC,OAAA;cAAQ0C,KAAK,EAAC,UAAU;cAAAR,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACjDtC,OAAA;cAAQ0C,KAAK,EAAC,UAAU;cAAAR,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACjDtC,OAAA;cAAQ0C,KAAK,EAAC,SAAS;cAAAR,QAAA,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC/CtC,OAAA;cAAQ0C,KAAK,EAAC,QAAQ;cAAAR,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENtC,OAAA;UAAKiC,SAAS,EAAC,2BAA2B;UAAAC,QAAA,eACxClC,OAAA;YAAAkC,QAAA,gBACElC,OAAA;cACE8C,IAAI,EAAC,UAAU;cACfC,OAAO,EAAExC,mBAAoB;cAC7BoC,QAAQ,EAAGpB,CAAC,IAAKf,sBAAsB,CAACe,CAAC,CAACqB,MAAM,CAACG,OAAO,CAAE;cAC1DF,QAAQ,EAAEzB;YAAU;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC,oCAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAENtC,OAAA;UAAKiC,SAAS,EAAC,2BAA2B;UAAAC,QAAA,eACxClC,OAAA;YAAAkC,QAAA,gBACElC,OAAA;cACE8C,IAAI,EAAC,UAAU;cACfC,OAAO,EAAEtC,oBAAqB;cAC9BkC,QAAQ,EAAGpB,CAAC,IAAKb,uBAAuB,CAACa,CAAC,CAACqB,MAAM,CAACG,OAAO,CAAE;cAC3DF,QAAQ,EAAEzB;YAAU;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC,qCAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAENtC,OAAA;UAAKiC,SAAS,EAAC,2BAA2B;UAAAC,QAAA,eACxClC,OAAA;YAAAkC,QAAA,gBACElC,OAAA;cACE8C,IAAI,EAAC,UAAU;cACfC,OAAO,EAAEpC,oBAAqB;cAC9BgC,QAAQ,EAAGpB,CAAC,IAAKX,uBAAuB,CAACW,CAAC,CAACqB,MAAM,CAACG,OAAO,CAAE;cAC3DF,QAAQ,EAAEzB;YAAU;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC,0BAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EAEL3B,oBAAoB,iBACnBX,OAAA;UAAKiC,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBlC,OAAA;YAAOwC,OAAO,EAAC,eAAe;YAAAN,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrDtC,OAAA;YACEyC,EAAE,EAAC,eAAe;YAClBC,KAAK,EAAE7B,aAAc;YACrB8B,QAAQ,EAAGpB,CAAC,IAAKT,gBAAgB,CAACS,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;YAClDG,QAAQ,EAAEzB,SAAU;YACpB4B,WAAW,EAAC,qCAAqC;YACjDC,IAAI,EAAE;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN,eAEDtC,OAAA;UACE8C,IAAI,EAAC,QAAQ;UACbb,SAAS,EAAC,iBAAiB;UAC3BY,QAAQ,EAAEzB,SAAU;UAAAc,QAAA,EAEnBd,SAAS,GAAG,eAAe,GAAG;QAAiB;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClC,EAAA,CArJIH,oBAAyD;EAAA,QAOJH,UAAU,EAClDD,WAAW;AAAA;AAAAqD,EAAA,GARxBjD,oBAAyD;AAuJ/D,eAAeA,oBAAoB;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}