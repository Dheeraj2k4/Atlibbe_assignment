{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{useReports}from'../../contexts/ReportContext';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";/**\n * Report Generation Form Component\n * Allows users to generate reports for a specific product\n */const ReportGenerationForm=_ref=>{let{productId,productName}=_ref;const[reportType,setReportType]=useState('standard');const[includeTransparency,setIncludeTransparency]=useState(true);const[includeCertification,setIncludeCertification]=useState(true);const[includeCustomContent,setIncludeCustomContent]=useState(false);const[customContent,setCustomContent]=useState('');const[formError,setFormError]=useState('');const{generateReport,error,clearError,isLoading}=useReports();const navigate=useNavigate();/**\n   * Handle form submission\n   * @param e Form submit event\n   */const handleSubmit=async e=>{e.preventDefault();setFormError('');clearError();// Validate form\nif(includeCustomContent&&!customContent){setFormError('Please provide custom content or disable the custom content option');return;}try{// Prepare metadata\nconst metadata={includeTransparency,includeCertification};// Add custom content if enabled\nif(includeCustomContent){metadata.customContent=customContent;}// Generate report\nconst report=await generateReport({productId,report_type:reportType,metadata});// Navigate to report details\nnavigate(`/reports/${report.report_id}`);}catch(err){setFormError(err.message||'Failed to generate report');}};return/*#__PURE__*/_jsx(\"div\",{className:\"report-generation-form-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"report-generation-form-card\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Generate Report\",productName?` for ${productName}`:'']}),(error||formError)&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:formError||error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"reportType\",children:\"Report Type\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"reportType\",value:reportType,onChange:e=>setReportType(e.target.value),disabled:isLoading,children:[/*#__PURE__*/_jsx(\"option\",{value:\"standard\",children:\"Standard Report\"}),/*#__PURE__*/_jsx(\"option\",{value:\"detailed\",children:\"Detailed Report\"}),/*#__PURE__*/_jsx(\"option\",{value:\"summary\",children:\"Summary Report\"}),/*#__PURE__*/_jsx(\"option\",{value:\"custom\",children:\"Custom Report\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group checkbox-group\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:includeTransparency,onChange:e=>setIncludeTransparency(e.target.checked),disabled:isLoading}),\"Include Transparency Information\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group checkbox-group\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:includeCertification,onChange:e=>setIncludeCertification(e.target.checked),disabled:isLoading}),\"Include Certification Information\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group checkbox-group\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:includeCustomContent,onChange:e=>setIncludeCustomContent(e.target.checked),disabled:isLoading}),\"Include Custom Content\"]})}),includeCustomContent&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"customContent\",children:\"Custom Content\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"customContent\",value:customContent,onChange:e=>setCustomContent(e.target.value),disabled:isLoading,placeholder:\"Enter custom content for the report\",rows:4})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"generate-button\",disabled:isLoading,children:isLoading?'Generating...':'Generate Report'})]})]})});};export default ReportGenerationForm;","map":{"version":3,"names":["React","useState","useNavigate","useReports","jsxs","_jsxs","jsx","_jsx","ReportGenerationForm","_ref","productId","productName","reportType","setReportType","includeTransparency","setIncludeTransparency","includeCertification","setIncludeCertification","includeCustomContent","setIncludeCustomContent","customContent","setCustomContent","formError","setFormError","generateReport","error","clearError","isLoading","navigate","handleSubmit","e","preventDefault","metadata","report","report_type","report_id","err","message","className","children","onSubmit","htmlFor","id","value","onChange","target","disabled","type","checked","placeholder","rows"],"sources":["C:/Users/Dheeraj/Desktop/Altibbe_assignemnt/frontend/src/components/reports/ReportGenerationForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useReports } from '../../contexts/ReportContext';\n\ninterface ReportGenerationFormProps {\n  productId: string;\n  productName?: string;\n}\n\n/**\n * Report Generation Form Component\n * Allows users to generate reports for a specific product\n */\nconst ReportGenerationForm: React.FC<ReportGenerationFormProps> = ({ productId, productName }) => {\n  const [reportType, setReportType] = useState('standard');\n  const [includeTransparency, setIncludeTransparency] = useState(true);\n  const [includeCertification, setIncludeCertification] = useState(true);\n  const [includeCustomContent, setIncludeCustomContent] = useState(false);\n  const [customContent, setCustomContent] = useState('');\n  const [formError, setFormError] = useState('');\n  const { generateReport, error, clearError, isLoading } = useReports();\n  const navigate = useNavigate();\n\n  /**\n   * Handle form submission\n   * @param e Form submit event\n   */\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setFormError('');\n    clearError();\n\n    // Validate form\n    if (includeCustomContent && !customContent) {\n      setFormError('Please provide custom content or disable the custom content option');\n      return;\n    }\n\n    try {\n      // Prepare metadata\n      const metadata: Record<string, any> = {\n        includeTransparency,\n        includeCertification,\n      };\n\n      // Add custom content if enabled\n      if (includeCustomContent) {\n        metadata.customContent = customContent;\n      }\n\n      // Generate report\n      const report = await generateReport({\n        productId,\n        report_type: reportType as 'product_details' | 'transparency' | 'certification' | 'custom',\n        metadata,\n      });\n\n      // Navigate to report details\n      navigate(`/reports/${report.report_id}`);\n    } catch (err: any) {\n      setFormError(err.message || 'Failed to generate report');\n    }\n  };\n\n  return (\n    <div className=\"report-generation-form-container\">\n      <div className=\"report-generation-form-card\">\n        <h2>Generate Report{productName ? ` for ${productName}` : ''}</h2>\n        \n        {/* Display errors */}\n        {(error || formError) && (\n          <div className=\"error-message\">\n            {formError || error}\n          </div>\n        )}\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"reportType\">Report Type</label>\n            <select\n              id=\"reportType\"\n              value={reportType}\n              onChange={(e) => setReportType(e.target.value)}\n              disabled={isLoading}\n            >\n              <option value=\"standard\">Standard Report</option>\n              <option value=\"detailed\">Detailed Report</option>\n              <option value=\"summary\">Summary Report</option>\n              <option value=\"custom\">Custom Report</option>\n            </select>\n          </div>\n          \n          <div className=\"form-group checkbox-group\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={includeTransparency}\n                onChange={(e) => setIncludeTransparency(e.target.checked)}\n                disabled={isLoading}\n              />\n              Include Transparency Information\n            </label>\n          </div>\n          \n          <div className=\"form-group checkbox-group\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={includeCertification}\n                onChange={(e) => setIncludeCertification(e.target.checked)}\n                disabled={isLoading}\n              />\n              Include Certification Information\n            </label>\n          </div>\n          \n          <div className=\"form-group checkbox-group\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={includeCustomContent}\n                onChange={(e) => setIncludeCustomContent(e.target.checked)}\n                disabled={isLoading}\n              />\n              Include Custom Content\n            </label>\n          </div>\n          \n          {includeCustomContent && (\n            <div className=\"form-group\">\n              <label htmlFor=\"customContent\">Custom Content</label>\n              <textarea\n                id=\"customContent\"\n                value={customContent}\n                onChange={(e) => setCustomContent(e.target.value)}\n                disabled={isLoading}\n                placeholder=\"Enter custom content for the report\"\n                rows={4}\n              />\n            </div>\n          )}\n          \n          <button \n            type=\"submit\" \n            className=\"generate-button\" \n            disabled={isLoading}\n          >\n            {isLoading ? 'Generating...' : 'Generate Report'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportGenerationForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}