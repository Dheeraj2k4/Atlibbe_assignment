{"ast":null,"code":"import React,{useState,useMemo}from'react';import{useNavigate}from'react-router-dom';import styled from'styled-components';import{Formik,Form}from'formik';import*as Yup from'yup';import FormField from'../components/FormField';import Button from'../components/Button';import{productApi,aiApi}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FormContainer=styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  background-color: white;\n  border-radius: ${_ref=>{let{theme}=_ref;return theme.borderRadius.default;}};\n  box-shadow: ${_ref2=>{let{theme}=_ref2;return theme.shadows.medium;}};\n\n  @media (max-width: ${_ref3=>{let{theme}=_ref3;return theme.breakpoints.md;}}) {\n    padding: 1.5rem;\n  }\n`;const FormHeader=styled.div`\n  margin-bottom: 2rem;\n  text-align: center;\n`;const FormTitle=styled.h1`\n  font-size: 2rem;\n  color: ${_ref4=>{let{theme}=_ref4;return theme.colors.primary;}};\n  margin-bottom: 1rem;\n\n  @media (max-width: ${_ref5=>{let{theme}=_ref5;return theme.breakpoints.md;}}) {\n    font-size: 1.75rem;\n  }\n`;const FormDescription=styled.p`\n  color: ${_ref6=>{let{theme}=_ref6;return theme.colors.lightText;}};\n  font-size: 1.125rem;\n\n  @media (max-width: ${_ref7=>{let{theme}=_ref7;return theme.breakpoints.md;}}) {\n    font-size: 1rem;\n  }\n`;const FormActions=styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n`;const LoadingOverlay=styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  color: white;\n`;const Spinner=styled.div`\n  border: 4px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top: 4px solid white;\n  width: 40px;\n  height: 40px;\n  margin-bottom: 1rem;\n  animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;const basicFields=[{id:'name',question_text:'Product Name',question_type:'text',required:true},{id:'description',question_text:'Product Description',question_type:'text',required:true,tooltip:'Provide a detailed description of your product, including its purpose and benefits.'},{id:'category',question_text:'Product Category',question_type:'select',required:true,options:[{value:'supplements',label:'Supplements'},{value:'food',label:'Food & Beverage'},{value:'cosmetics',label:'Cosmetics'},{value:'personal_care',label:'Personal Care'},{value:'household',label:'Household Products'},{value:'other',label:'Other'}]}];const initialBasicValues={name:'',description:'',category:''};const basicValidation=Yup.object({name:Yup.string().required('Product name is required'),description:Yup.string().required('Product description is required'),category:Yup.string().required('Product category is required')});const ProductForm=()=>{const navigate=useNavigate();const[isLoading,setIsLoading]=useState(false);const[loadingMessage,setLoadingMessage]=useState('');const[currentStep,setCurrentStep]=useState(1);const[productData,setProductData]=useState(null);const[aiQuestions,setAiQuestions]=useState([]);const handleBasicSubmit=async(values,_ref8)=>{let{setSubmitting}=_ref8;setIsLoading(true);setLoadingMessage('Generating AI questions...');try{// Create a product object with only the basic info\nconst product={name:values.name,description:values.description,category:values.category,ingredients:'',manufacturing_location:'',certifications:[],additional_info:{}};// Save product data for later submission\nsetProductData(product);// Generate AI questions based on product information\nconst generateRequest={product:product,num_questions:5// You can adjust this number as needed\n};const aiResponse=await aiApi.generateQuestions(generateRequest);if(aiResponse.success&&aiResponse.data){// Convert the AI-generated questions to Question objects\nconst questions=aiResponse.data.questions.map((questionText,index)=>({id:`q_${index}`,question_text:questionText,question_type:'text',required:false,is_ai_generated:true}));setAiQuestions(questions);setCurrentStep(2);// Move to the AI questions step\n}else{alert(`Error: ${aiResponse.error||'Failed to generate questions. Please try again.'}`);}}catch(error){console.error(error);alert('An error occurred while generating questions.');}finally{setIsLoading(false);setSubmitting(false);}};// Handle the submission of AI-generated questions\nconst handleQuestionsSubmit=async(values,_ref9)=>{let{setSubmitting}=_ref9;if(!productData){alert('Product data is missing. Please go back and try again.');return;}setIsLoading(true);setLoadingMessage('Submitting your product information...');try{// Create a product with the answers to AI questions\nconst product={...productData,additional_info:values// Store all question answers in additional_info\n};// Submit the product\nconst response=await productApi.createProduct(product);if(response.success&&response.data){setLoadingMessage('Generating transparency report...');// Navigate to the report page\nnavigate(`/report/${response.data.id}`);}else{alert(`Error: ${response.error||'Failed to submit product. Please try again.'}`);}}catch(error){console.error(error);alert('An error occurred while submitting the product.');}finally{setIsLoading(false);setSubmitting(false);}};// Generate initial values for AI questions form\nconst initialQuestionsValues=useMemo(()=>{const values={};aiQuestions.forEach(question=>{values[question.id]='';});return values;},[aiQuestions]);return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsxs(FormHeader,{children:[/*#__PURE__*/_jsx(FormTitle,{children:\"Product Submission Form\"}),/*#__PURE__*/_jsx(FormDescription,{children:currentStep===1?'Complete the form below to generate AI questions about your product.':'Please answer the following AI-generated questions about your product.'})]}),currentStep===1?/*#__PURE__*/_jsx(Formik,{initialValues:initialBasicValues,validationSchema:basicValidation,onSubmit:handleBasicSubmit,validateOnChange:false,validateOnBlur:true,children:_ref0=>{let{isSubmitting}=_ref0;return/*#__PURE__*/_jsxs(Form,{children:[basicFields.map(field=>/*#__PURE__*/_jsx(FormField,{label:field.question_text,name:field.id,type:field.question_type==='select'?'select':'text',options:Array.isArray(field.options)?field.options.map(option=>typeof option==='string'?{value:option,label:option}:option):undefined,tooltip:field.tooltip,required:field.required},field.id)),/*#__PURE__*/_jsx(FormActions,{children:/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:isSubmitting,isLoading:isSubmitting,children:\"Next\"})})]});}}):/*#__PURE__*/_jsx(Formik,{initialValues:initialQuestionsValues,onSubmit:handleQuestionsSubmit,validateOnChange:false,validateOnBlur:true,children:_ref1=>{let{isSubmitting}=_ref1;return/*#__PURE__*/_jsxs(Form,{children:[aiQuestions.map(question=>/*#__PURE__*/_jsx(FormField,{label:question.question_text,name:question.id,type:\"textarea\",required:question.required},question.id)),/*#__PURE__*/_jsxs(FormActions,{children:[/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"outline\",onClick:()=>setCurrentStep(1),disabled:isSubmitting,children:\"Back\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",disabled:isSubmitting,isLoading:isSubmitting,children:\"Submit\"})]})]});}}),isLoading&&/*#__PURE__*/_jsxs(LoadingOverlay,{children:[/*#__PURE__*/_jsx(Spinner,{}),/*#__PURE__*/_jsx(\"p\",{children:loadingMessage})]})]})});};export default ProductForm;","map":{"version":3,"names":["React","useState","useMemo","useNavigate","styled","Formik","Form","Yup","FormField","Button","productApi","aiApi","jsx","_jsx","jsxs","_jsxs","FormContainer","div","_ref","theme","borderRadius","default","_ref2","shadows","medium","_ref3","breakpoints","md","FormHeader","FormTitle","h1","_ref4","colors","primary","_ref5","FormDescription","p","_ref6","lightText","_ref7","FormActions","LoadingOverlay","Spinner","basicFields","id","question_text","question_type","required","tooltip","options","value","label","initialBasicValues","name","description","category","basicValidation","object","string","ProductForm","navigate","isLoading","setIsLoading","loadingMessage","setLoadingMessage","currentStep","setCurrentStep","productData","setProductData","aiQuestions","setAiQuestions","handleBasicSubmit","values","_ref8","setSubmitting","product","ingredients","manufacturing_location","certifications","additional_info","generateRequest","num_questions","aiResponse","generateQuestions","success","data","questions","map","questionText","index","is_ai_generated","alert","error","console","handleQuestionsSubmit","_ref9","response","createProduct","initialQuestionsValues","forEach","question","className","children","initialValues","validationSchema","onSubmit","validateOnChange","validateOnBlur","_ref0","isSubmitting","field","type","Array","isArray","option","undefined","disabled","_ref1","variant","onClick"],"sources":["C:/Users/Dheeraj/Desktop/Altibbe_assignemnt/frontend/src/pages/ProductForm.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport * as Yup from 'yup';\nimport FormField from '../components/FormField';\nimport Button from '../components/Button';\nimport { productApi, aiApi } from '../services/api';\nimport { FormStep, FormValues, Product, Question, GenerateQuestionsRequest } from '../types';\n\nconst FormContainer = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  background-color: white;\n  border-radius: ${({ theme }) => theme.borderRadius.default};\n  box-shadow: ${({ theme }) => theme.shadows.medium};\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.md}) {\n    padding: 1.5rem;\n  }\n`;\n\nconst FormHeader = styled.div`\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n\nconst FormTitle = styled.h1`\n  font-size: 2rem;\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 1rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.md}) {\n    font-size: 1.75rem;\n  }\n`;\n\nconst FormDescription = styled.p`\n  color: ${({ theme }) => theme.colors.lightText};\n  font-size: 1.125rem;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.md}) {\n    font-size: 1rem;\n  }\n`;\n\nconst FormActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n`;\n\nconst LoadingOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n  color: white;\n`;\n\nconst Spinner = styled.div`\n  border: 4px solid rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  border-top: 4px solid white;\n  width: 40px;\n  height: 40px;\n  margin-bottom: 1rem;\n  animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst basicFields: Question[] = [\n  {\n    id: 'name',\n    question_text: 'Product Name',\n    question_type: 'text',\n    required: true,\n  },\n  {\n    id: 'description',\n    question_text: 'Product Description',\n    question_type: 'text',\n    required: true,\n    tooltip: 'Provide a detailed description of your product, including its purpose and benefits.',\n  },\n  {\n    id: 'category',\n    question_text: 'Product Category',\n    question_type: 'select',\n    required: true,\n    options: [\n      { value: 'supplements', label: 'Supplements' },\n      { value: 'food', label: 'Food & Beverage' },\n      { value: 'cosmetics', label: 'Cosmetics' },\n      { value: 'personal_care', label: 'Personal Care' },\n      { value: 'household', label: 'Household Products' },\n      { value: 'other', label: 'Other' },\n    ],\n  },\n];\n\nconst initialBasicValues: FormValues = {\n  name: '',\n  description: '',\n  category: '',\n};\n\nconst basicValidation = Yup.object({\n  name: Yup.string().required('Product name is required'),\n  description: Yup.string().required('Product description is required'),\n  category: Yup.string().required('Product category is required'),\n});\n\nconst ProductForm: React.FC = () => {\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingMessage, setLoadingMessage] = useState('');\n  const [currentStep, setCurrentStep] = useState(1);\n  const [productData, setProductData] = useState<Product | null>(null);\n  const [aiQuestions, setAiQuestions] = useState<Question[]>([]);\n\n  const handleBasicSubmit = async (\n    values: FormValues,\n    { setSubmitting }: FormikHelpers<FormValues>\n  ) => {\n    setIsLoading(true);\n    setLoadingMessage('Generating AI questions...');\n\n    try {\n      // Create a product object with only the basic info\n      const product: Product = {\n        name: values.name,\n        description: values.description,\n        category: values.category,\n        ingredients: '',\n        manufacturing_location: '',\n        certifications: [],\n        additional_info: {},\n      };\n\n      // Save product data for later submission\n      setProductData(product);\n\n      // Generate AI questions based on product information\n      const generateRequest: GenerateQuestionsRequest = {\n        product: product,\n        num_questions: 5 // You can adjust this number as needed\n      };\n\n      const aiResponse = await aiApi.generateQuestions(generateRequest);\n      \n      if (aiResponse.success && aiResponse.data) {\n        // Convert the AI-generated questions to Question objects\n        const questions: Question[] = aiResponse.data.questions.map((questionText, index) => ({\n          id: `q_${index}`,\n          question_text: questionText,\n          question_type: 'text' as const,\n          required: false,\n          is_ai_generated: true\n        }));\n        \n        setAiQuestions(questions);\n        setCurrentStep(2); // Move to the AI questions step\n      } else {\n        alert(`Error: ${aiResponse.error || 'Failed to generate questions. Please try again.'}`);\n      }\n    } catch (error) {\n      console.error(error);\n      alert('An error occurred while generating questions.');\n    } finally {\n      setIsLoading(false);\n      setSubmitting(false);\n    }\n  };\n\n  // Handle the submission of AI-generated questions\n  const handleQuestionsSubmit = async (\n    values: FormValues,\n    { setSubmitting }: FormikHelpers<FormValues>\n  ) => {\n    if (!productData) {\n      alert('Product data is missing. Please go back and try again.');\n      return;\n    }\n\n    setIsLoading(true);\n    setLoadingMessage('Submitting your product information...');\n\n    try {\n      // Create a product with the answers to AI questions\n      const product: Product = {\n        ...productData,\n        additional_info: values // Store all question answers in additional_info\n      };\n\n      // Submit the product\n      const response = await productApi.createProduct(product);\n      \n      if (response.success && response.data) {\n        setLoadingMessage('Generating transparency report...');\n        \n        // Navigate to the report page\n        navigate(`/report/${response.data.id}`);\n      } else {\n        alert(`Error: ${response.error || 'Failed to submit product. Please try again.'}`);\n      }\n    } catch (error) {\n      console.error(error);\n      alert('An error occurred while submitting the product.');\n    } finally {\n      setIsLoading(false);\n      setSubmitting(false);\n    }\n  };\n\n  // Generate initial values for AI questions form\n  const initialQuestionsValues = useMemo(() => {\n    const values: FormValues = {};\n    aiQuestions.forEach(question => {\n      values[question.id!] = '';\n    });\n    return values;\n  }, [aiQuestions]);\n\n  return (\n    <div className=\"container\">\n      <FormContainer>\n        <FormHeader>\n          <FormTitle>Product Submission Form</FormTitle>\n          <FormDescription>\n            {currentStep === 1 \n              ? 'Complete the form below to generate AI questions about your product.'\n              : 'Please answer the following AI-generated questions about your product.'}\n          </FormDescription>\n        </FormHeader>\n\n        {currentStep === 1 ? (\n          <Formik\n            initialValues={initialBasicValues}\n            validationSchema={basicValidation}\n            onSubmit={handleBasicSubmit}\n            validateOnChange={false}\n            validateOnBlur={true}\n          >\n            {({ isSubmitting }) => (\n              <Form>\n                {basicFields.map((field) => (\n                  <FormField\n                    key={field.id}\n                    label={field.question_text}\n                    name={field.id!}\n                    type={field.question_type === 'select' ? 'select' : 'text'}\n                    options={\n                      Array.isArray(field.options)\n                        ? field.options.map((option) =>\n                            typeof option === 'string'\n                              ? { value: option, label: option }\n                              : option\n                          )\n                        : undefined\n                    }\n                    tooltip={field.tooltip}\n                    required={field.required}\n                  />\n                ))}\n                <FormActions>\n                  <Button type=\"submit\" disabled={isSubmitting} isLoading={isSubmitting}>\n                    Next\n                  </Button>\n                </FormActions>\n              </Form>\n            )}\n          </Formik>\n        ) : (\n          <Formik\n            initialValues={initialQuestionsValues}\n            onSubmit={handleQuestionsSubmit}\n            validateOnChange={false}\n            validateOnBlur={true}\n          >\n            {({ isSubmitting }) => (\n              <Form>\n                {aiQuestions.map((question) => (\n                  <FormField\n                    key={question.id}\n                    label={question.question_text}\n                    name={question.id!}\n                    type=\"textarea\"\n                    required={question.required}\n                  />\n                ))}\n                <FormActions>\n                  <Button \n                    type=\"button\" \n                    variant=\"outline\" \n                    onClick={() => setCurrentStep(1)}\n                    disabled={isSubmitting}\n                  >\n                    Back\n                  </Button>\n                  <Button type=\"submit\" disabled={isSubmitting} isLoading={isSubmitting}>\n                    Submit\n                  </Button>\n                </FormActions>\n              </Form>\n            )}\n          </Formik>\n        )}\n\n        {isLoading && (\n          <LoadingOverlay>\n            <Spinner />\n            <p>{loadingMessage}</p>\n          </LoadingOverlay>\n        )}\n      </FormContainer>\n    </div>\n  );\n};\n\nexport default ProductForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}